<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="5551px" height="4805px" viewBox="-0.5 -0.5 5551 4805" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-05-11T10:05:44.437Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot; etag=&quot;McJ0CNnvkqsQ37Yq4UZN&quot; version=&quot;21.1.2&quot; type=&quot;google&quot; pages=&quot;4&quot;&gt;&lt;diagram id=&quot;Z3rYrO0Id5frD54juCjo&quot; name=&quot;数据是如何维护的&quot;&gt;&lt;/diagram&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;读数据写文件&quot;&gt;7V1Zk9u4rv4t98F1J1Nllyzvj71mcrL1JD2T5Ekly7St27KkUFK7fX795aLVlt1e2wKNVCZjkVpIAvgAgiBYa93MXt5T059+9kbEqena6KXWuq3put5pt9n/eMlCljTbg6YsmVB7FJdlBd/t/5K4UItLI3tEgsKNoec5oe0XCy3PdYkVFspMSr158bax5xS/6psTslLw3TKd1dIf9iicytK+3svK/yL2ZJp8udkdyJqZmdwc9ySYmiNvnitq3dVaN9TzQvlr9nJDHD56ybj8+LD44Xx66r7/z9/Bb/Of64+PX/6ty5fd7/JI2gVK3HDvV/vzSH/46n78azCYTH7222P6YV6PqRuEi2S8yIgNX3zp0XDqTTzXdO6y0mvqRe6I8Ldq7Cq755Pn+aywyQr/j4ThIuYFMwo9VjQNZ05cy3pBFz/5843mQE8KfsUvFBe3L4WrRf7qgVB7RkJC48ItRycexcCLqEU2DEkrvpEPRI6F4kF9Tzz2bbpgN1DimKH9XOQzM2bXSXpf+uiDZ7MG6losW/2YrRLB6nca3UGPFcs/S++TzY5fkafy0lubeqeht3W9Hb9Gaxe+oifcnbw3NOmEhCvvvaLUXORu8/kNQf4O9iM3GlmR4LodOLDZlw16Np0oHspVnnRHVxwK2JXlmEFgW2sZSu/sxE8vdph/jl3+St7JfmdP8YvFifgt7q+kxKYbW1sy5jzDuU7MZNMcxCVlB/Jvt6U1NK2T8FnCsDGjtVvafgzMX9tPuXfltYOldq7h32NxZ8KMB3FnzGTNBu9NxmUak/f2Rk7jF6dGu4oxlVZExW57Tzbqab3Ci/qDdsWATz8G8MWsVeei2C7wVpsNwK68leJoswCijc4rMLobT74OdOUaeBtubp+VedtLKr05aAy6GZRpSyy4LS93ukvvXW7a+Xl5UMLLXYcN77VPSYGnu78jbjBfD72XemD/13YntdYVf787ZdzIey0Yihn6blgfmzPbWcgb2KPmzBeVrRbn9WgYuWHELXXP9VZqxRM3cW3gmxYpvjoQ1il/sdYYkFla6dguqSfMwaubDT2t9M3RKG1xUzyl+S/s37b43cy9x/Icj8ob6WT4h5a2J/frXXr3jFHQduP2iDfG5bZbbAx/vJNWzz06qvPOpY3KPyxqh5SYT7LO9ejMdNJq75nQsePN63M29Su9Qw6UJN266nmudW3ZOTmObApAaLFxS8+H5CWs22wu4YarjReVITXdYMyeSp53ScZB7Nck/r/gNPYplw88B8oCqz3ln9mDFdeSstnqFoi53LIgpBGb0sbtY5Ilm5g0W3u15e6+LV83RiZHPkrGhbdMw5BPxq84LOj3xLFfbNoYsnktk4WG5TGevme/Ikab++d2g4n6PUcJW9CN9Yn8Nsa2Qw4c5KFpPU3E1FLWczk0aX1CzZHNPvQHG3mzXIqK8tRMBEQUcXrp3IcRX+vtjGJ6p7PXA4PlB7Zql3gqE/gcTy2PhOD8EbE8ypSR5+ZZf53g9XKCN2RSzwSPj1sUJAinc2RaYc+McgmDmssMswfT+scVt6amZwJX/F0icrXe+qbL4iHNlTBtMdgKQsLjdqrTTPuR+9nstEq6ZE1NegA5vHOS489XiHF65BtG433bcF5G3iCDBzAyCI3CTDPjUIFDffL2+iSh2zG1ydEYVhj8iASIBIgEF44EJ2TYMfVmyK7Q2DWm2vbMiuqiktKH6gKm/FVbXViMF9Y78RAKEAoQCi4ECk7IsL45MhjO2A7yLDSezZMObUjgcuh44zEqDnhCmNKtkoqDr3K/IBQgFCAUXDoUnJBhKWGWiO8FyLLQWDZHObQggUth1G2jAEITQEm0S1MYz4QGfFiRXYGxa0Y4VBcY+Xsm9JhFoZjUInaAwo6EbJVUdo5nPSGCVQDBLM8NDgEwhN5TQi8P3fd8IqEC5/vgMHiFfscE4wuP+D+h2HmHqhgUtTcXNUEznCVVdHOTvSG0Sg1V7XuOY5BncYHYAQs7CrRDDKmiuY/zlCqDH24Mhwh7J9gUjnMSFDEUsQNE7BJtijPOS549e4RwV0G486n9bIaIeOAQLyPcRYJelXvSu329M0L0SFa6lKmQsxErn0/tkHwX2dZatzKvWD5fIZvzeE/kRjaWPdaSefFYzcgMpiKncDO+eDB5/jBXlOgib+ZuWQafCeXLnOK+NSktkyTXWre5lF9Pk9e5tIGtpCyfN1Bfzk6ZzxFYyLG3a0K9JAUiJtRbx+JroU/ejQn1lhuvRkI9pqQs9PZU1DazxuHCR9MMnGmW0q2SIUEnZdjfxtB5siaGQyamtRDpEDGcAiADr6GjIlONDvt7C9UdIb+0b9PPPDPafo7XaDRKJ37bervAdLTQJxC9a7zSt9PrMNecrU8+qLT8HqpNl5qu67nm8kOcNtjcWYntGTNCJ2RUuAmgIuB1KKYQTU30WwO1LffxWyuN6BCkzRuPAxJ6YxQ3aOKWo5wak7c/9m01+ipP7frhon0obyBEnMXbk5BODYzYZNerIW585QYdq+BELSGbGmKm9ARz1cGBIgZBxFK6qSFj79BHBRZC+K7kYOrNEUSggUiOcuilAiNvbCIzMXxqu6FB59zUQsGDJnhlJFRDke+tx6vcp97t6906SqSzYw6Jcy3YKAl3Fuy3KQb6VAHO7Waj2ytEOCcHihfORe83Wq3VGOdmcu/xY5z1tTHO7AMcbvnJp0F8VHxCyigc1/vrUdrfMTo6w4LS0Ojko6WR0WkTbmr5qOjslcsh0aKmNB5a1GwRDL3GsRtjZQyU4qblAGhZWB79LOrKQ5+zqtW4Z1HnrQ16zo3DSsRzOQS3tddjnTN4Xw50zmrKopwFi6xhmiq64A8NdIab0+PQRbv1g57XD/1eecQI2npo612crYdrlJWcH/JZPW7vhwgVOcop449Relt5gKFC8IRMnSChwwIAMFEGVER7Bsmt79a3uqa3mlrlO7Bxu0uuCyodSyP3x8npC/s9wWgccAqvjIRq6L+9J6AQJA9tS3iihrYlIAGzgsAIPbkDHEUNmqgtUU8NoVNboZHfBqMaiho0UcsIh1JWfSlDsxGegKljNr7bGMmthuHIJ9FsPj22HQdX5YGKXCkN1RDBTQJY7qYs+aVtI6znDfROAuqShKPq6vTYg+c5trUwrPFvhBuAcLNMQfXBRg1tL2Y/Y1Tx4GQuI5waoobTVhSwagmYQtPWfVt9VhO4ntrAB408BHzARHhAQUK5A1yUN3hDGqGcgZOzmGpqCNm7jQ3fI9TubDtOKAkj6h6AGDP7VE3Pful6s6TpGkjW2ZZzqtwFvt/8CJvNt9tYPjVH3pxd85YLyBYHavGrSTws/HfwREJrGl+U7WKvwgb10h3qHa1ke/rpjuBq4fZ0Xofb0yu7Pd2aHQ/cAofZ9sysWxTNmdzY2KHpiD3pK828/3PDToqtkboqvdH+5Obaaqi1VhfY4/iEivfxf8UNvEHsJ+MIfif7OTI5Pqg1ILW2Fozjd6WbG7XQSwYhvlCu0zIsUdwcRyhqPDk1+yyDABKs34IMt8tyMV3eLX6x/0WuJWY9SyT3Iv6vKQdnouJYePFAyBU/8UH2z++IkV6Mh3I9FuAl7pUwJgk+5NLus7bzVJWyKOMU9QaB59IzQi80Y+qXMH0QzRIsSIZBS+aI0mjkOkNoCddTDSaU6oz2OLWDIsjZ7jObAwVFLtdEFTHZ7CnBO0n/VE2wBwU/jGqJgRBO15/7BHS0UiQMfGLZY1sgwnCR4SUboxc7CIMGLyqOoBhnObj8qbkdTmuJbSHmByqPV4ynpjvKIW1yLTrOpkVsbi7tSaZiuB9QczzrqSYMz1E8oB/GKyCl2JAJNmFTP+kKTfkij7myYBVwx9SblTGdAO8c06k1YFnFY8wPWcuEx4jzWZgOG3E5Lyk1BEp1JtFI4p/M/opy1pfluUkOpNQwSRRYkKgftQZFHlO8tFROiTkyRPrjkErgnJFw6inH3/dH6A/gPCGKZgXEpAzgl2sxKUN11mgxKyBCRYWhArMCQhM1jGWGJ2TqxDIfFqGIWvjkljuiAzR02D3LDOpfFDIUshMLGVQt/MoufK3srwJyGXXbKJXQpFIS7ZiK76xiubd36sLV9WsxOxUm+Tv0SFZSHaBHEqpOQI9kVbDtACtzC8sT4fHsWeZkxqB4awDCJCiYLKEgwmVl4XILvDtjIMym0zGrPOIb04GewA9yNp0kIusOYS5UpqdVpmn+PVSkABVpnnqoRCGInNjTgZIGS9Ik0dRfgYFr7L2hPt68IR0o5S907Y3diHAMDo5jqh3T4Dkas26zj7DCGLEh4yeULFEb1DKkFGkXNAGdYOp+eBicUQ4nnkBEDaP/IIqZQsF/m9qt6EnhGN0HUOqOH90HgVXDlWwXyKwAmHV5sgneDJNf2rfpmBn6ZEpZRf1MrcgQaU9kaigEP1jgt0w+NQzlP46e6R+CKE4dOwiNsUcNnhbQYIV0YTACo1RCk8oNlFREQPdtNQQ5RE8RRJlTy1O0Yam66rOXCzuAGZECIFIcd0c5nvb4dorZ4KYVyhxAmUtJhyoajLhZE8P1RrgXF6K8ZbRTQ+DWh2a9Lm7nRYqdQ7JU8moFvu0K76RhU4xzAgcky+RTA0vQf4WCVjFBO7b/Cielufb8xlGsNmaJA4pwDRokchVop4Z9sMf6c+U3VNjjtT2q+ARKdWst3cVuENccOvxcJsRAWBi4hopqoKHq8oezJYjyhrOlys2WzopS6i/IYO4UgEilUu6Ud9ttj9+cVhS+HOJGIZCSqN5GIf3AvUJHEzbAeeCVntzgmXPwYArPnAMkYOg9gChi6D2AKW0+esbByZqvjh+81lFbutC9BFC8juteQk32RrLm2KjL4AmbpJoq2uy2IvMzsBmlTxgmBAHERGx45GJwP1Q8WyWgGtCmtE8XXU4QRQ1dTlUMWMFRfBvMwvB+uMiF4f0V702ttz4GQNVceWneQ2m9IqpAQ5VVAqoBLTulrgRzGAvuHcITkS7RwUV+Gz613RDDqMApmALtFNEtZ8eyU8oayhg8GVNHtg5bCguO23RdzzVX7xX4oEQk45JHaWNwNnGcaF8qBIdme1smQzfXl05rc186N+7e7a4CCS6Q9WFqxHOe4xy5gT1xC/vDdx30czbf8dyJik2vMp9vmITBt/xwO93r7aqg8bf7drpqS9imhkM5+3m7hQD4kHH38+Hrt0fj+6/P118/Ge8fPiF8QIOPMhKqASVKu2niREfcsWbwmJZDp10oeW8ueWUkVEPydlPiPAyfkuWeDWlpv6583yF1NmSEWlPTnZC6S+acWcukTy90XeeUZeXzqR2S775p8eI5NX0hjDOHXTX55MQcEudaUPFGDsKtoD4b7JB6TyQpZN3QxJ/0U75JuXCKb/34sPjhfHrqvv/P38Fv85/rj49f/q035X3PhLKmyPtEUeuu1rqZvbwn3oyEdMFuiWvbzUa3p2V/ml35hkVc3dHk9dwehVNZ1knKpjGD8sJuOy405Wjqk/RTOscf0QD2Y/ZyQxwnaY/4zVhjJJ/x55H+8NX9+NdgMJn87LfH9MO83mrHfTKdKB7mhILsAxz4GJloQMICFaNwXO+vx0vBDjswbSaVY3NmOwtZW0vCupKPDiM3jFjFzHO95UrJzrwmkJyRvpJ9kCRyPGByLGo4x9WnOQhoNnRZ45ujUdrAJpd7TfMZiGtt8buZvGF1DThGrRiyxE0zk07sGIL4W2Sh7RY/rQlEFHVzxrd13oO0CeljompIifmUQBqdsYmDqPMYS44db16X4rBcLcdBkqO0Lg+G7VgiNIeETEqLrck/KYDWdoVCKzZV1ITUdIMxuz+HwEs+vi19TMeFwkyxvLZaH4RMg1hAfTQ2NzP235Ny6CrS+kHPa59+r9wNfCqry+Imkm8E5PfYdojBQwrQ7oJmd5UTUQ3La39H/PlAkkbWQVADYLbGgyA4syFYQAOLHOW2R4jXmfasGx7+PLtjZAYSXA9boD2nMffsFTZMI7fuxK1sEgaSX7cLGa1wB3Y/sQ2NnPMZOdY4XPho4oAzcVK6oYEDRMxQxgDKmEoCJr+ksjLj8z6UNICSlhHuwj16Fz5ZP/recpw8nNSqiZ3y0TBYBAZfOcOZBDjsLSeiMlaP2tOKAEPI4AlcsFvQWMUF7EKmFShp8CQtIxxOK3Basd20AswMA9PKVFJZoP8JoKI4su8JM2O+nWGG4ZwQBS5HOTVMs+3CNnbP9HU284KSMKLrE4qoMbNDZQ0QO1BZg5Q1VNZQBU45ZX3+CShMP4qoO79BADe0F91QFSLH+VEALVtUtGjZgpc1mYq/20aBgyZwOcqpYdmeyg0FQQwx4TxcQcSE8zjJPMoksyKZrDGJOCYRB+dXwekoKmWcjoKXNZyOQhU45aaj57eBT6nTMCQcnoipFA6OZiOKWBVFTKGN3O/U2ZFMnICs7cnrcIELzGj9IDQjNOOM/kwz+gBn9PAELkc5RQyiHY0hXGBGQayCIOIC8wlkDReYz7nAPNp39HGBGReYd2F5CLoZp6MAlTJOR0HKGk5HoQqcctPR89vAp9RpuMAMT8RwgRmUiKHZCFDEcIG5igu1GxeYLzULztnnJMpaR3cfvvx79QnRGxp6p3RTA8CVge+DoW5mn6rp2S9db5Y0XVOac6rchd7tK0PPin1KslK90Eidow4rn0/tkHz3TYsXy+PsmXaYOeyqyX5y5LmR7WQPtTTxh5U75pA41wJ5kur4xPkgpN4TKXtGNsE3qTjBnrfhx4fFD+fTU/f9f/4Ofpv/XH98/PJvvSnveyaUNVHeJ4pad7XWzezlPfFmJKQLdktc221r8pGFvNbjy7k9CqeyqKPFZdMYRMV9vbjQlHTVJ+mrda4YxQfZj9nLDXGc5PviNyPmSD7jzyP94av78a/BYDL52W+P6Yd5vdWJ+2A6UTzcCVXYB7hGtqYmDUhY4JcoHNf76xW5IOYObJZpjrE5s52FrK0lvtLko8PIDSNWMfNcb7lSMiCvCSSHpK9kHySJrhkwXSNquAqvT3NqqtnQZY1vjkZpA5tcN2maz6wLrS1+N5M3rOJQDEIxdIqbZiad2LGa5G+RhbZb/LQmtLaomzM+rfMepE1IHxNVQ0rMp0Tt0pnpyDqPseDY8eZ1KRbL1XIcJDlK6/IKux1LgOaQMGTautCa/JPCGLBdYWkVmypqQmq6wZjdn7MSBIusYZrqKTt+zIltHaDsnui5mm67nMMPafr5Bv0CzkQaOk/WBGcl0GYlCdm2n5RUfO6//7lHh0a3rceHfKP7vfIwixMuphihZ6B4ghTPJeqp4TrYe/ESNfhJkQJPNVQAMPBUQ7gCiHEPAAVOobiH7Ta5VLgDtd6Ggb+oRQnEO8S7SuBdxQ2KWutedSljdDeZXFDDw/178MStSD017AyMXkYxq5iYKWTFizpcJaskOKAbHiQ8qOV/PwwgIIgZ6mCAQqaSDl7vSav8fPjqEGwYnsx6aGYtb5U1/Ms/nz6BZJWNLA7F7YrhsEk4bFcrhMO2kvDYfDxsUpaPh23q2oniYTvdknjYJQKQ0YR8jy89Gk69ieeazl1Wei10IeHf4cOX3fPJ8/yYPv9HwnDxXcSm3ppR6G1Hvd0oEXgRtcim6N+4t7xHGwlGicMU2nP+pvLBjx998GxuWySEbrY6RUr3u53iO0KTTkgYP7ZEw7QdB4Q5l5EVw5wxzLk6Yc7W7HhaKWDSSpj5vSianbmxsUPTEbHNK828/3ND3MDWKrYqvdFYZzQ2I50YPh3bjmPQOY/zYIV1LgWijH/NdBw+ixHvpskjyb1qjUatrQXj+F3kt8FGgMMY00B8PCRs8wvlOu3Hs1PfYzcuZG+fRciPNjKFDuCrBqwVDA5IoCLZvXFMd/aD67qY6uGULHM8a0k6aGqNg1Kd2QBgQpR5G5iNVaRuQ7FBWL8mvX1/IPjp8LQmgH66XQ9q2sJtpObWizIbDZkdFrOX0lANHzVuw6ikTswmMIgVsLAiRzll4iOV3nARYEAkPCFTJwwSA7WqCw3S7hNuNUO60hAoYAFFCQVRK0MQPeGfRWEDJWwFn7q6WvmVbK5a2d/X1PihTqGlznaaaf9yP5udVmlKJdXVOF8eQjABBiaSaGqgCW6pxmnLW09bcK0BJu6VB+gcZYENAOsi18Lk2pMw7Jn3QKwPZ1dD1nJIY/CzsVDqoEldCQXVMJj/2H9Z+owz6WfPXh9VWHG429uZWNWJFXx8RhcoPETe0QVacVCo6arPN9A1CFDI1HINbmp40bUGxst2EYkLDQNDe+FjyRoqqgEuSqdYw7g9eNKGcXuABAznn/AE7EJCcCo/b46zW8h/VdbCaPfCBArFLN2tp9EV7sPGBFpK7fi++/nw9duj8f3X5+uvn4z3D3iQOTj8KCOhGlCi9KQZXVbwRU9hh9VmNZ4U+xeRRLLHOTyXWrCbnJWeTyKZpB8sHKo+0E51qHp/bbZBf8ecgQWZKE0byMa41a6tyxuY1KYMleUOLLx6OX1gUlmaQTCp3CKJ4Bp2X4sj8u7lhIJpeXlOwaS6PK1goXY1s2BS7a1NLlgcqJX8gmthq52DrQ1ZBgvAuJxosFBZlmtwrVas3nIXnqd+lkG/gEh+C09jhW+vlRNRmSAhPGt9NXUPHj0BUE4zwqkxmcLUXpXU6ZjaCzJAYGovWKKGUgZQypRRwa/tTxlSGP3YuP9/tScYoFwF9PPGOA+BCIAp3dTAQKXXU9HCAChgR7Ywzmq/12vJithBfYAga+mxNihvsOQtI5waGm2LKAU4hv2GmMPLirdYPrSzo3VW4y1aWsmhnc3OqeItBlsc2umOrij15uxK8JZtFYeejRJd/KzJEzvFxS9+0eh1kuvbl3zt7SK5erFD/lyzoWnt+Fo+2mr34uvsUX6Rf/KB8SgbBELjsmMf8NmSN8rjNTfd2NnyJNA8lUuInJQdemBof9Bo9rTsT6/Ac+0k5id5oxyIleNDV97b0ruNbu69zeJr+0uvXXMqKWMkcVpVcpvPbwjW96arF0Wm29M3tnL5/nYsTpmMyBYc9YjUdoIEhwhRLAtMwXVyotDcKAa7sXxFGLTPGCnHnsuM1N2TP/t6twiuy4x+4nNy2zqek5tEuYkaPCdXez2CLTOT8ZzcWuLZhXeQola+yb94Uu6UOD6hteSYSQ4JeFaucp3Gs3JjfpaInkhCnvBK9VipzmgPsWhmZIxJJ8U5wS557vGIPNsiGp51ybNMNj8fcfVqMyMyFoWGYuODB+aiE7SyTlA8MBfzal0Qu2NerUoFvGBkLaJFhdECI2uhiRom34MnZJh8D7XwW6UYwUNz4QIFHpoLVPQwYyc8YbuQjJ2vHJpbOD63qurb8twNS0IVbvjl2B3oLoSJgqc79RKtjVMJHMoaTFlTzBm/YY8tlLy/GwYe0rE/h+dBA2vZHQqDB5w6yQNXUT/uqx85GK4fvkrDRof9vYVKefmlfZsODK+3Re6z89O5pfGE1ur1p4/vjW8/vj9ePRrf7q5uDxxqtFvf3G4toaAaFuwmGN8aOwCj+aE5Spaaruu55uq9Al+XAE5c8k2en57VA+SjA/yvVe7W5SimH98+PN6hZoKsmRISompC1XQk1fSDvbGYEB8gI6FuAq6bvv/6coOqCbJqiimImgk105E00/eFa6FiqmS3LkcxXaFmgq6ZrlA1oWo6rmq6Ci5RN1W5M73bjXSAFOmA8QLn4aHzxwuc0KYZueYM966Cs2MSsikTtHqY8ocgaSLaeESeDZQ4iBK3TD41Zg1Kn5OAO9Pgidlxd6bhKQlvp9tQ1qDJWkw1NTTZ5vMR9pjnQ5A7TMoHUOxOkJTvWKz6DFL0jy3553SUbcqG+4aMYKvOCGC8vvb4AH6AObc8q9X+Pyrb6ejtBWkx7O7trTIubLd3evfQF7gH+87sUzU9+6XrzZKmayA5SEU9L7LoX5iifwNz9fWhA7zshbhxPNyoxOSq6tyaOLSdjcbHGw7lCW3lfKjgl29oNEMzmlfop4b1XBHB29tBdGYAk38B0v1UsyYIUMwz9YuDwjABPDgYLtBODQg+/3znlLKGMgZPxtSRLVEHexMIY49A3Jr8z3GifWkRHOqtXyZGN9ejTmtzjzo3652aMAhxcQIAQcPgIhRIJaPWIlRFxAx2JtBzm8FAo1T4Tt313LfLoRXaNswKc650ziCsyA3siUtGa9v++qCfs/mO505UbHqV+XyDew6+xWaG3sy2um2DLuWrRMsNguW2TD41LDiY4YW1ZAlV/qsyauBRLTDh4vhHteA2vDfS09GLYbkocuBELiOcGroZnQMHOAfe7bKV8Wy7GtdvFXt9hgk45BKEGsDpGmhlgNO16oAFTtcQLqoNFzhdgypxOF0DKnI4XQMlZ3gKH3SBU/kUvvUrh1WfSG/aSaH8ngScZINGFJxkVwlIcJKNcFFpuMBJNlSJw0k2UJHDSTYoOcMThcFLnNInCl9kfmDcOA9XGnHjPDBZQxmDJ2PqyJaoU2Lj/KMXmo54BHfO4875t5IACCoGd86D1DK4c74iTcfNyG/ffNyM/PZ8fv7NyDAPkjm6jwhuSvoL54RtGaHKXeit3+eyfRcgmMV3Px++fns0vv/6fP31k/H+4ROayNBM5DISqmEuK+3zNAxxLLJPx7bjGBjcAlP41lBRDfnbbNMlxT4lWaleaKXO6cDK51M7JN990+LFc2r6QnpmDrtq1vj5LW54IxvKHmpp4g8rd8whca4FLZJqQUM2XiH1nkjZM7IJvkm5lIk2/Piw+OF8euq+/8/fwW/zn+uPj1/+rTflfc+EsibK+0RR667Wupm9vCfejIR0wW6Ja3ucx/kji/huLSmY26NwKgs7nbhsGjOWKNTiQlOSVp+kL9c5dIhPsh+zlxviOEkLxG9Gz5F8xp9H+sNX9+Nfg8Fk8rPfHtMP83q7FffCdKJ4wFcoQNzRFaXenF0J7rKt4tiTFzv8yX4z/u7El79yVbe8+1pysYgvdhtkMpqQjUOcH8HSAZRllDhMmp/z7yof1PgLD544ETKhYL9fpOCgu0SXwIuoReKnMtK8+qKMFZI3hSadkHDlTYLIab8PoHu7hO5SHtmrua6ypiYNSFiAiigc1/vrVZwQ4x0QJkPRsTmznYWsrSXBcclHh5EbRqxi5rnecqXEHl4TSGxIX8k+SBLcHTDcFTVcndWnOchuNnRZ45ujUdrAJsdpTfOZ3tXa4nczecPqnDDWMrGKETfNGPHsWGXwt8hC2y1+WhMaTNTNGULVeQ/SJqSPiaohJeZTooLozHRkncfAZ+x487oExOVqOQ6SHKV1eeXVjrFPc0gYMs1VaE3+SaEYbVfYIMWmipqQmm4wZvfnNKZgkTVMs1ZvWbPjKa6AiT1hRsyiqLxzY2OHpsOAraSZ938eYSJXlc5orDPaAydvNAwWQciZ+95n1xa3+nzRNPZ2wcMMeth/3PWpDfm3wqkQb/FUQwiq9ji1+Zqh+EdUqzVQY2YHmzPG6GJFlFkMkRVGVFwMI9sRgMF+Op71JAaAG26sAS4zLRyHUD4qIyJun9vhtKHY8CjVGe3eJs4okOD9JJie00zqo/iJhw/iTbkmm0Lj+dFQvFkzXf6cPZtFoTl0SFoyE80aigLLIkGwYT0B6PCNbEqs0FnE4+ZFocAK15pSz7X/K+ZQqgnA/RH6czYftUSztT14Qx/1CT0kUqsZUtkZsWpDBwksB0k5Ebf3j1R8WbzW2+Ah2WPVqyoIeS9MTakyY9sxNTJjUymU5qMVpEakGYamNRXqN/R2QdnKrwleEN4ixMKE2COj6ln3WG6Yn6CYoZiBEbNKWy6b2n1YolQIRkzOhYYGjdIGTTz3QMCFCbgZ+dC8gSB0AUoaOEkLdhMvNGvOb9YwoSWUuJYwapiw8K/Ua8kSBfvxbItAgCAwap1rHm/QuZ2Q8A/OeHJdg1f5kSxBwwYUxvqEWn5k8Jci1gLD2gLtjmnSQGBc9jZMKAWQaVO6oZEAyUgo+j7ieM3Ew4E6HxR04mq4Ajh6+tVwdGyczOiO4RNlDpbMpXRD2wWS7RLYQyYck0AIScC/YbrW1KNiNSZer8msmv/l9y2l5rWmtjNilTW0dYBBLSe4McXDAQCibZ50l+bdiCELmRYa02aEuzgbAbXd2WEDtR1Y4LhkbZeZ18i1sLg2R7mL03eQ58TK7L/LRl/LL1N8F27ReuTavyPO9B9u453K/D8RkBm5USAdACKEgTKsSqpMZ27yMDGtmW5vVmlL89KQzcyQSbHYwSxXcyzRfrFL1fE8uQdWBLpGQXqbMabezLBHf7xTaTNncWSO7OY51N97QApN262E4Wtv2O18mSoBM9pC5+mxY06C9exxmWxdFTxX2dL57Lle6Lm2ZToi24LtWpSYsYZO7Z6AtUQkHnGj2ZBQ9mM+tS2ezmJExmx6JMwddQeJjYNIQaRrYkbDOzsT6aSZjedIS4YEsZH3IRQrP5PIpKYbErlVR27nETerOkbrl7q4S0IwiMhuYru1ZKHMDCzixllvkoH1xqvvktxnuGLg3Q3aH/oYxlMJsbOLMYs3F18OCaWRH8pxiqcZJIhmssBm1WJ2HqAJrc5Zb1G3fSAh0Iv15l4sSbRL87rm0BkZFhbD5kmHflcgqlHl2cgHPvvgGRKzNJGey4GAf4Y43DaMt4rF5mVsdP+TM5xSy7uWGN6qjpYMNMtMa1f4nr3x2EnybBI2bZHjQGxaHDZFB+XyTEUz9Ga2ZWAcMDj1m6PcpRmNEtUN3HoHkG0LtEOzEYiaFCHs+a2+2pPtOHmn0rebf2riTANi8vN2MUQdFqRSK8KYPZCAmqPcpdkByLQXxbSK2ACo7c4OHHOPPhlpTxE7QGFHkXiXpvNGhB8WtzD4KCDvQuPdJepdlu6rchd6t6+Pfq1qh0OOzIBn85Uv5hcPJj8uzRUlrKtpK49/fqSudZuFUwNbPW278yN7yY3HPz+yg+cI8jo8R7Cy5wiiWX9K28jCnFLwTaRyIh7TzAeaU+rQ5KjrsSPf6H6vzDw64Vre2LAwxzY8MU3ppsYc5o99W40a/ZTo8MRmM+PA8HziGmPbQXUODidKKIi6HILoeZiMHZywebslYa+yQn63vtVQXIrbeUVxRbAKaGfhKYYgEc/a/RRDNCrOKmYoZBCFTCkRk19SWZ2h8Q5Pyo5rvJ9VwJZSMKis0Z72biRK2tl8Ui5KGjxJwwNLYErb8Q8sQYnLDy+1n/dtxKFzMQyZFy26CAfZOFz4uP4GDn1Tuikze1fbQTZGCweijKkkYJfgHjNQ0AAKWko3Nda49w46gyFjKF/w5EsZ2Xq3seHqZGU5OEimKp1ZSk/3OBXHoIh/ePBgLUk0E7k+9UJiySx/9sx3RM4/KRlxCmgZFcADlFU+G0QLyG/Zx3SgXJGGnadjF6PDD0ipieTqmozD5GUiCJOPKU3GLEnHPjU3nCIAfbBEa00rtJ9595muI5S4lhgKXiOTivPBaQhk0a6JZUYilZFM0y5vkNtSQgGeig4UH4MsLeSImsv5IDk7yVN6BNON7ID1zLNsU4rk3A6nyV1xdM6NuqMl2WLl/KJY8mStHAaR2V/yD68xh0IO7dV8/566oyUOdJI4HoTihc/sSQnroZ2JGZNMx4vPkcgjlRgtZnoy0A+JusiuSOY0e7y2H6/7EXBmhj5GnJql/HBkvwcuob6NrOHWVniiptC21u120WSGROVNCkrCiLpre6XG8gTPjsh4NZmiGtScI4pAQ5FyIqoBK2qbx7hHBaC4WbvuUUEDuRLSljjEUN5gyVtKNzU0Wq2jtJShywegiKHLB6SsocsHnqgd1+WDkpZrD1/dA2kQ3O4SQlRtrxlxArJjTyrfp4M9geeNsU6EVP57dik9pe2J/hSAGhH9KTClTR50jNIGS9piqiniS9nSbKpyF3rrt0Bt3wUIeHH38+Hrt0fj+6/P118/Ge8fPiF4QAOPMhKqgSRKrzNi5nuY4qZY5vvNXo6k2K/UwVenOtWq2UpOrEpOtUquXzvVqtXWTnWqVbfkVKslChB3dEWpN2dXgrtsqzj2bJjo4ie7qGsNTWsnJb9Yidbo6mnBLR8HLb1a5K8eGMuxHhEaF+5Gg9Ckk/jgrc2Hd5HRhGwkVZ4SJYRIyihxTLHXJ3tXOXHiLzx4NkfllBOa/SIndLqt4jsCL6IWiR/LaLzypn6rW3yRvsQpcmhWXiSYJe33AfzTw1PReB2eioanoq1Muy8hc9PQebImaGZCMzMTsh0zrcyZfSrbuYUqv/J0Eahh4VmK8DGknIg7zFu3lUUQHI3OFoAcrJCn5TVJ21UBQhC6wLddx7OeDIw/BSd7BdrtpTR2Dyc6Gk/zhquOEmgxVwnquES9GCElxKDsGcQ7aHi3SsADQQ8+Tw+dp4kYEeRmaNycJx3az6gOz+J2Nia/ETkAIkdCuQt1FRkGtSJkXGiMm5DtpGYbnn1xUmNzauMZX/AkL086NDbR2Hxr6Jg6dhAaU2KOEDugYUeBduhx4UjKRwQZGRoj50l3cUoQ9WHFUIRN4X3Psa2FMTJ5mC+iCTg0WSHhCdwxOJ09WbyRj8YoOKmTRFNEe6ud0+7608eb98bnq5/Gw9dP31HUoInaCv1UkbpbNJuBQgp6kcCiCTqRcnxsOo4h5g+B4XojDN4Bx82rBFREOW6pGTd3wTpyH/oZzzSbg+x3p1XWBb1lj0dknNN5R5LgjzkJvvn65f7De+Pm/bev/zwYP759eLy7vrr5iJIMTZLXE3I3LYWGYpUULBqKYAUSDcW8j3IyH+JqI0g+zpMOjcPqGIfEHW049xZQ/stXuah2yrRg65N/jcxgSkbx4/ziweRpbFxRwjqUtuX4+cF0rasVkjk1m0lBLi1VO0kdlc9LpSeFx08Q1l9N8HTXr13f1waD2t2g1u/V+je1u25t0K9dxXkdOPlZ1VWzdt2t3XVq181aXzx1dVe7vot/sNq7du36qtbnKMqmo7YnnmNl1zUmFtmP+N2ipF/ra/GPK858MvlAKHIr1e56tQF7X5t/k31hcMdL+uyb2jr2ybFKkSXidENj23GWikzHnnBusBj1ebqya05g2zKdq7hiZo9G/DOlvCm0mOAvwYZTcyTyqvGLSSyk2ga+PRXrDVpLnKetMl5zUMZ4J+O7wdrEYsNlqOCjVYpiSwm89DbPxLWCRoxbGJtdtzjPDtqcczjLdTjbsB/9W1HS49w4aImqO85jGUzJz6+g1/A17ELmW4N7vVXm07W3ZL4kzV+O+bzxmGexkyjDwaWXg5sUoRi79GtMThhLDZq8kP+4qV31SxiIo9itKMnBVp9B5b34hLg/Bth7ZKHNLNRaxq9mCQs135SFmissJOh7L7giJav2LFiKgc1AKMtu7VoXqrHL+aY/EMqSlVzH7HItmIOjVF9aWPFLuX5NQSvluQ7/DHsqX8X04eBe3MO48Lr4IcZ2raRxVw1kuldwq9lsdHsFvivL6Npq9Rut1luynl7CegNuODGYkbYbI3BmxCXWVAm79DivXHXE402OVcJS45njtALqcRbSEs65FbzU5U+UcPzRecoh41AVjlpKENxulcCY/qYw1lrhJZ9yYhQ5YJVzunxawNmM2VQ614pZSYdrSKYekxSs7jDg/xMBzvLlBp3zdGLILBuZZSmHcP/8zNJea7NjMmBMBlyFZMDW7HiOr8AxQzKh5qJWcL7mxsYOGe5YZc283xCcvL0zsiKd0VhntM/miz2LOFu70WzIjDzGSeOcvSBizW0ScOBxGHsxQGXE5T6fIRdwSiZ2wFhEFFuea0WUA6azaKg2ULdkzABjJEBZYJsYhMCe+Y49XoiPW07EwzK0EfEJlwlLuVG4V8AXPxKErB09UgPDkNVZR9sqDHll9VffXjqWl0liFyktlZgr33cIU7MMZ5kl5k5I3SVzRzDxKn+fY8HlhC7GZtFB1C5xMpaevZK6ko5vLuPZGWguo7m8nbmsnL0s3B3Sz2FQETCk1TlDy5/hlItxbAQnGMFtZ2FTm8XnVRuaWluLOybuLvRUWsu0GGGlQq+V6oz2rZyNA9f0g6kXJoycUZoxtTsSlJUHr2uiYbabvsTkJjJrI1NEAc6GKhWSy2xoa20PtNdbTs/VdNuNjd+9m36+Qb+AOOiiisOZL6iZb7l98noM6Rase+gR9OulLh+62O+Vun3egttjgxBZHizLG3TnPQAVDtjd+6Rs1I+oHxEs3lg/YtKlUwkcyhpMWdtDzKqsjt8dwV1w1g7gYa2QUA/NDMDQd8Jp+LFYl5IgcjYsYlQZyDZpkH2A7FAJW+oN34UQdyD3szyipZhf/2zcYKvOCGCU29ijBzAETIfFG7BxxSdw8kv7Nn1mn4pbs1+63ixpt7YvySuLG5UA3apzaxKL5FTFmjmhIX796eN749uP749Xj8aXb2iLQ7PFV+inhjuiIoK3t+F4ZgCTfwHSfTs3lJqprczQm9lWt22IpAAIxLCAeIl6asDw3nOeahhw8t99+4DOqNb1hqhIBQA3ejEsPLwTINamhFMDZqtw7glQH2nnVlTvaTSmv7TiXwXAzSfU8iNDBLcTagTRzPC9wA7tZ8yuDw7wNhNTDRBEW7PiiILL9TDB4/iRSmeVuHoqcgf1AYLECczHCQo8kcsIp4ZuxgnKAROUd+82kh1S+Eayk/b8KzOAfWrbckOVu9BbH9CRFvsnS7XvmEPiXAs0XsrJuD4nzKnSwDRbSwk2eyU5E0uzwOhJ8vPjZ4EpSbAf0wWzwGAWmCpkgcHw+lNOHDC8HvDk4XTh9We2GRQxgi8CQYoeZwQRaCCyQr8dHBFqhlehMw0oK6MzDZScYUQ5bHFTNaK8s/mAyD0sUAjSmIalouIDJ4kF2h1ovynF0xi3CZShMW4TkpyhJQdb3NCSq3IvXjmwHOihHFucdf72a7Srp6B3m61GZ3WZtuxE4GZbO3yZ9stP63P7a98J6trk6e/xy7P1YNdLjnNN1lpL+VEAR3zqoIBQfvDgWoUwXC447EhrcZp6w/aMGaETcdSUOJmxK45fFOeqy4PZ+11xwHqHH955fVM8af2anxR7J88o7vATPdk98Unvt/xI0FY+afnrR2BngvEaM5/5eNlT8XV75bBYXVth6rZeflZsa3e25kHAHueKtO496+70szci/I7/Bw==&lt;/diagram&gt;&lt;diagram id=&quot;9ILs27tEDmzbRY3dTfQR&quot; name=&quot;4.19 空白&quot;&gt;7V1dU+JKEP01VK0PWCRB0ccVxf3yunVd6/qWGshApjbJ4GQC6K+/M5kkkBAXRV3S2C8aej7SPd3nnMkI0nL64eJSkKl/xT0atOyOt2g55y3btnonlvqlLQ/GYlvHp8YyEczLei0NN+yRZsZOZk2YR+NSR8l5INm0bBzxKKIjWbIRIfi83G3Mg/Jdp2RC1ww3IxKsW/9jnvSN9cTuLe1fKJv4+Z2L+EKSd84iiX3i8fmKybloOX3BuTRX4aJPA716+bp8G/Rv3bvO3eMkpv3kZ89JuidtM9ngJUOKEASN5NZTs7Ov17/+7X2Lr2b/kOnPk871wsmGdGYkSLL1atnHgbrJWUgl0WnxiYipuevxfaJjPUvkuH2yfKmuJtnvdORUUL1a8iFLQd5vyBftmD2yaNJyPmvHIp8KZkaqvEayPSYhCx5MqxpHwqlqzG86TCKZ6LzwiFcbW3Y/a4mnZERXpozTgtQTdg5PaWhaAhbRtp9lXbdZh7ZpmRLPKxy0VH81brpQP7vptZXPMOIBF6aXmAw/dYwD+a8D0ykkYsKi7O5qFmNkUfnWetSRaZtz4bV1BIULxbC0aSgo+W0aIi5CEpg2PqNiHPB5e64wvN5s1sGko7ZtvuJOV7lj1ohKSUXZm9WRki5km0VeWpIlV9MWKUgUj1X/fGRksvJU0aj7RHpdAxLHpar5vTrmBVVld57KVJYlyzkurlXG1jyLJZFslPuncGVczN3ubPZcvq3rR1bh78qldeTUOM8i+QrPo20dfyq7mkl8QcelWXwptQZ81pRlD2jAFkwcDhWdKngejrjC20BdJQp9g1n30FK0PFABD1hacvbAdVnEXrvEQzL6PRE8iTzTrpmBiPZEEI+p23xS605Waqb26iBFsQZxbtLZsrvd4rXdXZaafXS01YDT6oBn+ZWOOqirqOpKpKj16IgLVfY8WoFt3mONK3rmbmYhFT8putDrlsQ54dqaNKs1UeQtr05SrZZtKnb8bjTRsZfXJ70arL1nkXuUeLomsdZB1no1fc8v+Q31Pn3bci8Vefm6puA/bev1LhVxxtVGGOJqHzztdct2rE7jA2j1/lDmKyGoy9NG7wgFlYmI9n1fRYOZK+iExWr7j4oDTXEq2fvggsN3ynv5IYX5uW0MIEgjvHfzvQ5yBjTOKCdvPyjj4I+OQ9k4nW9Ye2VOT1tzq11y0tYVpOxzn0l6Yw5Gz80ZocJ7GKhXVjFsRoXqXjkz33DgbBWn4OHikvKQSvGgxmWz9LpmmuwvB5aufP16vjyGd7qZzV85gs/7kezkf1LMvDzd1pRjDrhfcNht4WE3HnbjYff7HHbvznORjPb+sJsGdEYkF658mOIOC9wOq5q+Nz36hlC/+HwAuHq3fT7YXLu7fT53nt5eb3Z9x08Gz3u4ee6R6k6DOdz5yQhX1AbxIXf3K/e+moFSAU8qUCEaQQ0vVwjUip0zHotiKqQr6H1CYxkj/UGjv/UEvuA0/bkABEyJIFDoeS4CETgQa3O4H3/ZSttQ2YFxClP+y5GflyMyCjhGWc8gajs8HHouQhE8FGuTiOre4LD2W92ngur3yiCjQGWU9QSitoNDoZIFBCJwINbmEJW9wWHtt7KPWcRifFQAyydr+dtK11Hhm4FGpQ4ISNiArEsh6nuDw9pvfY9U3SOZQCWTSvZQ2wEjMf3g8tANiP4kDkISKiSfSiNqfIPD2m+N1x/MQ0qBSylr+UOdB4zGTCAQlLBB+VQaUecbHNZ+6/yQcVcV4wQ/YQqOTVZTh+oOGIOe5yIMwcKwkj3U8gaHtd9anm0okUhgEkk1fajpgLGoVAHhCBqONRlEbW9wWB9C22NTix7SCTQ6WU8gvlseHAqVJpj04afcwQKxNoeo7A0O60MoOwo7UD5Zyx8+twNGY/WpDwEJDpB1KUR9b3BY+63vPondORev/V/vSCR/nUhWMoeaDhiBShAQhFBBWE4e6niDw9pvHdffRuvGIx8fCeCRSCl3qOWAUZj+j1KVTPV8l+Af1cEBsZo+1PMGh7Xfek4XqOdQaaSUO9RzwChUgpAmE/UcJBCr6fuoet7kYPQXIj87HlCh7fcGJYlp7OL3ecEjxWXi8C1+4FAnBe5D4EEuy9rH2n78OYTRG8dwsiwUS6Mmvz5yakNw2NhTyFzSwluB9fsKWPvX/wy+XrpnP7675xdnt5fu4AaxCw279Ul8mXTitrUxApo+CroeHSaTcewSKQW+SR4cJuuT+HxMbt4M4j72nQ/Wsi+fdxGPe4DHDdnEfW9z9r008tgYNyswWJIGdEYkF8iLMHlxLX+4RYEDvkLUEHwgwbeWv4+1DUH53jmDFPQfkRBP7cERSDV9KN7pLK+Vworrtr3irt0rVUUNWDNLeN/O+b3UDfkc+fwvPI4FjOCOEC6h5/lDRm8OoyOdNy+YD0LnfB5RgXQOls7z/CGdwwHfry9fb9yr6/PbHxeIPGjIKyfvY52rNTmE3vnm1VfmqaBLq13y09Y1pOxzn0l6MyUjbZ4LMk0RHwbqlVUMm1GhuptxljFNidD4Tk3fBv1b965z9ziJaT/52XOS7kk77edctJx+uLikPKRSPKhx2Szd446Z58G8bltWZpgzT/rGeNTJbH5WyOlIJzMSkxB7Ukxua4pKb6kuwkWfBkHxUnC9gkXbpYrUv+Ie1T3+Bw==&lt;/diagram&gt;&lt;diagram id=&quot;f_KqbhbAnjcG4P2mMeHj&quot; name=&quot;第 4 页&quot;&gt;ldFBD4IgFADgX8PRLaWlXTOzS3VwzTMJCoU+hzStX58OzViXOgEfjwfvgXBYdrEiNT8AZRJ5C9ohvEWe5/qB2w+DPEZZLJdGCiXoaDMk4smmwFHvgrLGCtQAUovaxgyqimXaMqIUtHZYDtK+tSYF+4IkI/JbU0E1Nxp4/ux7Jgo+3eyu1manJFPwWEnDCYX2g3CEcKgAtJmVXcjk0L2pL056lSHfHM+3Sx6fMt5d0soxyXb/HHmXoFilf03dT+an9Qvrh3H0Ag==&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="1230" y="904" width="550" height="440" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 911px; margin-left: 1232px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_bind">blkcg_bind</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">root_css</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_lock">mutex_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">for</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">i</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span> <span style="box-sizing: inherit" class="n">i</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&lt;</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKCG_MAX_POLS">BLKCG_MAX_POLS</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span> <span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">++</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_bind_fn">cpd_bind_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/continue">continue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_for_each_entry">list_for_each_entry</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">all_blkcgs</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/all_blkcgs_node">all_blkcgs_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />			<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">])</span><br />				<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_bind_fn">cpd_bind_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]);</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1232" y="923" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static void blkcg_bind(struct cgroup_subsys_state *root_css)...</text></switch></g><rect x="1240" y="1200" width="520" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 518px; height: 1px; padding-top: 1207px; margin-left: 1242px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;">void bind(struct cgroup *root)<br />(cgroup_mutex held by caller)<br /><br />Called when a cgroup subsystem is rebound to a different hierarchy<br />and root cgroup. Currently this will only involve movement between<br />the default hierarchy (which never has sub-cgroups) and a hierarchy<br />that is being created/destroyed (and hence has no sub-cgroups).<br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1242" y="1219" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void bind(struct cgroup *root)...</text></switch></g><rect x="4330" y="1554" width="550" height="1260" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1561px; margin-left: 4332px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* This is per cgroup per device grouping structure */</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* must be the first member */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* group service_tree member */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rb_node">rb_node</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rb_node">rb_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* group service_tree key */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/u64">u64</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/vdisktime">vdisktime</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * The number of active cfqgs and sum of their weights under this</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * cfqg.  This covers this cfqg's leaf_weight and all children's</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * weights, but does not cover weights of further descendants.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * If a cfqg is on the service tree, it's active.  An active cfqg</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * also activates its parent and contributes to the children_weight</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * of the parent.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_active">nr_active</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/children_weight">children_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * vfraction is the fraction of vdisktime that the tasks in this</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * cfqg are entitled to.  This is determined by compounding the</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * ratios walking up from this cfqg to the root.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * It is in fixed point w/ CFQ_SERVICE_SHIFT and the sum of all</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * vfractions on a service tree is approximately 1.  The sum may</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * deviate a bit due to rounding errors and fluctuations caused by</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * cfqgs entering and leaving the service tree.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/vfraction">vfraction</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * There are two weights - (internal) weight is the weight of this</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * cfqg against the sibling cfqgs.  leaf_weight is the wight of</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * this cfqg against the child cfqgs.  For the root cfqg, both</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * weights are kept in sync for backward compatibility.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/new_weight">new_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dev_weight">dev_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/leaf_weight">leaf_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/new_leaf_weight">new_leaf_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dev_leaf_weight">dev_leaf_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* number of cfqq currently on this group */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_cfqq">nr_cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Per group busy queues average. Useful for workload slice calc. We</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * create the array for each prio class but at run time it is used</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * only for RT and BE class and slot for IDLE class remains unused.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * This is primarily done to avoid confusion and a gcc warning.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/busy_queues_avg">busy_queues_avg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/CFQ_PRIO_NR">CFQ_PRIO_NR</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * rr lists of queues with requests. We maintain service trees for</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * RT and BE classes. These trees are subdivided in subclasses</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * of SYNC, SYNC_NOIDLE and ASYNC based on workload type. For IDLE</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * class there is no subclassification and all the cfq queues go on</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * a single tree service_tree_idle.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Counts are embedded in the cfq_rb_root</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_rb_root">cfq_rb_root</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/service_trees">service_trees</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">2</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">][</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">3</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_rb_root">cfq_rb_root</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/service_tree_idle">service_tree_idle</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/u64">u64</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/saved_wl_slice">saved_wl_slice</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">enum</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/wl_type_t">wl_type_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/saved_wl_type">saved_wl_type</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">enum</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/wl_class_t">wl_class_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/saved_wl_class">saved_wl_class</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* number of requests that are on the dispatch list or inside driver */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dispatched">dispatched</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_ttime">cfq_ttime</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ttime">ttime</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats">cfqg_stats</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* stats for this cfqg */</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* async queue for each priority case */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_queue">cfq_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/async_cfqq">async_cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">2</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">][</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/IOPRIO_BE_NR">IOPRIO_BE_NR</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_queue">cfq_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/async_idle_cfqq">async_idle_cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="4332" y="1573" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/* This is per cgroup per device grouping structure */...</text></switch></g><rect x="5000" y="1934" width="550" height="510" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1941px; margin-left: 5002px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats">cfqg_stats</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_CFQ_GROUP_IOSCHED">CONFIG_CFQ_GROUP_IOSCHED</a></span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* number of ios merged */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat">blkg_rwstat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/merged">merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* total time spent on device in ns, may not be accurate w/ queueing */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat">blkg_rwstat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/service_time">service_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* total time spent waiting in scheduler queue in ns */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat">blkg_rwstat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/wait_time">wait_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* number of IOs queued up */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat">blkg_rwstat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queued">queued</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* total disk time and nr sectors dispatched by this group */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/time">time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_DEBUG_BLK_CGROUP">CONFIG_DEBUG_BLK_CGROUP</a></span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* time not charged to this cgroup */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/unaccounted_time">unaccounted_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* sum of number of ios queued across all samples */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/avg_queue_size_sum">avg_queue_size_sum</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* count of samples taken for average */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/avg_queue_size_samples">avg_queue_size_samples</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* how many times this group has been removed from service tree */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dequeue">dequeue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* total time spent waiting for it to be assigned a timeslice. */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/group_wait_time">group_wait_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* time spent idling for this blkcg_gq */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/idle_time">idle_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* total time with empty current active q with other requests queued */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat">blkg_stat</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/empty_time">empty_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* fields after this shouldn't be cleared on stat reset */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/uint64_t">uint64_t</a></span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/start_group_wait_time">start_group_wait_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/uint64_t">uint64_t</a></span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/start_idle_time">start_idle_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/uint64_t">uint64_t</a></span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/start_empty_time">start_empty_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/uint16_t">uint16_t</a></span>			<span style="box-sizing: inherit" class="n">flags</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif	</span><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* CONFIG_DEBUG_BLK_CGROUP */</span><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp"></span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif	</span><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* CONFIG_CFQ_GROUP_IOSCHED */</span><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp"></span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span></pre></div></div></div></foreignObject><text x="5002" y="1953" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">struct cfqg_stats {...</text></switch></g><path d="M 4884.95 2651.46 L 5160 2651.02 Q 5170 2651 5170 2641 L 5169.95 2454.45" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 5169.95 2449.2 L 5173.45 2456.2 L 5169.95 2454.45 L 5166.45 2456.2 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="40" y="2744" width="550" height="140" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2751px; margin-left: 42px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="kr">inline</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats_update_io_merged">cfqg_stats_update_io_merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op">op</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />					       <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op_flags">op_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat_add">blkg_rwstat_add</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/merged">merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op">op</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op_flags">op_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="42" y="2763" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static inline void cfqg_stats_update_io_merged(struct cfq_group *cfqg, int op,...</text></switch></g><rect x="770" y="2794" width="510" height="370" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 508px; height: 1px; padding-top: 2801px; margin-left: 772px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats_init">cfqg_stats_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats">cfqg_stats</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat_init">blkg_rwstat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/merged">merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat_init">blkg_rwstat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/service_time">service_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat_init">blkg_rwstat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/wait_time">wait_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat_init">blkg_rwstat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queued">queued</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/time">time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">))</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">goto</span> <span style="box-sizing: inherit" class="n">err</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_DEBUG_BLK_CGROUP">CONFIG_DEBUG_BLK_CGROUP</a></span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/unaccounted_time">unaccounted_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/avg_queue_size_sum">avg_queue_size_sum</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/avg_queue_size_samples">avg_queue_size_samples</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dequeue">dequeue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/group_wait_time">group_wait_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/idle_time">idle_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">||</span><br />	    <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_stat_init">blkg_stat_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/empty_time">empty_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">))</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">goto</span> <span style="box-sizing: inherit" class="n">err</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl">err</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats_exit">cfqg_stats_exit</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ENOMEM">ENOMEM</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="772" y="2813" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static int cfqg_stats_init(struct cfqg_stats *stats, gfp_t gfp)...</text></switch></g><rect x="770" y="2454" width="480" height="290" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 2461px; margin-left: 772px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_alloc">cfq_pd_alloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/node">node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kzalloc_node">kzalloc_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">sizeof</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">),</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/node">node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_init_cfqg_base">cfq_init_cfqg_base</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats_init">cfqg_stats_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/stats">stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">))</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kfree">kfree</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="772" y="2473" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct blkg_policy_data *cfq_pd_alloc(gfp_t gfp, int node)...</text></switch></g><rect x="720" y="1904" width="440" height="270" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 438px; height: 1px; padding-top: 1911px; margin-left: 722px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_CFQ_GROUP_IOSCHED">CONFIG_CFQ_GROUP_IOSCHED</a></span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_cfq">blkcg_policy_cfq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dfl_cftypes">dfl_cftypes</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_blkcg_files">cfq_blkcg_files</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_cftypes">legacy_cftypes</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_blkcg_legacy_files">cfq_blkcg_legacy_files</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_alloc_fn">cpd_alloc_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cpd_alloc">cfq_cpd_alloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_init_fn">cpd_init_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cpd_init">cfq_cpd_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_free_fn">cpd_free_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cpd_free">cfq_cpd_free</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_bind_fn">cpd_bind_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cpd_bind">cfq_cpd_bind</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_alloc_fn">pd_alloc_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_alloc">cfq_pd_alloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_init_fn">pd_init_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_init">cfq_pd_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_offline_fn">pd_offline_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_offline">cfq_pd_offline</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_free_fn">pd_free_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_free">cfq_pd_free</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_reset_stats_fn">pd_reset_stats_fn</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_reset_stats">cfq_pd_reset_stats</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span></pre></div></div></div></foreignObject><text x="722" y="1923" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">#ifdef CONFIG_CFQ_GROUP_IOSCHED...</text></switch></g><path d="M 905 2743 L 905 2764 Q 905 2774 905 2784 L 905 2797.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 905 2802.88 L 901.5 2795.88 L 905 2797.63 L 908.5 2795.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2760" y="1284" width="550" height="2620" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1291px; margin-left: 2762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Together with queue_head for cacheline sharing</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_head">queue_head</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/last_merge">last_merge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_queue">elevator_queue</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator">elevator</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_rqs">nr_rqs</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">2</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* # allocated [a]sync rqs */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_rqs_elvpriv">nr_rqs_elvpriv</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* # allocated rqs w/ elvpriv */</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * If blkcg is not used, @q-&gt;root_rl serves all requests.  If blkcg</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * is used, root blkg allocates from @q-&gt;root_rl and all other</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * blkgs from their own blkg-&gt;rl.  Which one to use should be</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * determined using bio_request_list().</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_list">request_list</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/root_rl">root_rl</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_fn_proc">request_fn_proc</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_fn">request_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/make_request_fn">make_request_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/make_request_fn">make_request_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/prep_rq_fn">prep_rq_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/prep_rq_fn">prep_rq_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/unprep_rq_fn">unprep_rq_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/unprep_rq_fn">unprep_rq_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/softirq_done_fn">softirq_done_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/softirq_done_fn">softirq_done_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq_timed_out_fn">rq_timed_out_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq_timed_out_fn">rq_timed_out_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dma_drain_needed_fn">dma_drain_needed_fn</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dma_drain_needed">dma_drain_needed</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/lld_busy_fn">lld_busy_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/lld_busy_fn">lld_busy_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_mq_ops">blk_mq_ops</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_ops">mq_ops</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_map">mq_map</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* sw queues */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_mq_ctx">blk_mq_ctx</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__percpu">__percpu</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_ctx">queue_ctx</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_queues">nr_queues</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* hw dispatch queues */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_mq_hw_ctx">blk_mq_hw_ctx</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">**</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_hw_ctx">queue_hw_ctx</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_hw_queues">nr_hw_queues</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Dispatch queue sorting</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sector_t">sector_t</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/end_sector">end_sector</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/boundary_rq">boundary_rq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Delayed queue handling</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/delayed_work">delayed_work</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/delay_work">delay_work</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/backing_dev_info">backing_dev_info</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/backing_dev_info">backing_dev_info</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * The queue owner gets to use this for whatever they like.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * ll_rw_blk doesn't touch it.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span>			<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queuedata">queuedata</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * various queue flags, see QUEUE_* below</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_flags">queue_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * ida allocated id for this queue.  Used to index queues from</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * ioctx.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n">id</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * queue needs bounce pages for pages above this limit</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bounce_gfp">bounce_gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * protects queue structures from reentrancy. -&gt;__queue_lock should</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * _never_ be used directly, it is queue private. always use</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * -&gt;queue_lock.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/spinlock_t">spinlock_t</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__queue_lock">__queue_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/spinlock_t">spinlock_t</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_lock">queue_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * queue kobject</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kobject">kobject</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kobj">kobj</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * mq queue kobject</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kobject">kobject</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_kobj">mq_kobj</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef  <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_DEV_INTEGRITY">CONFIG_BLK_DEV_INTEGRITY</a></span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_integrity">blk_integrity</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/integrity">integrity</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif	</span><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* CONFIG_BLK_DEV_INTEGRITY */</span><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp"></span><br /><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_PM">CONFIG_PM</a></span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/device">device</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">dev</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rpm_status">rpm_status</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_pending">nr_pending</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * queue settings</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_requests">nr_requests</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* Max # of requests */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_congestion_on">nr_congestion_on</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_congestion_off">nr_congestion_off</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_batching">nr_batching</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dma_drain_size">dma_drain_size</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span>			<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dma_drain_buffer">dma_drain_buffer</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dma_pad_mask">dma_pad_mask</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dma_alignment">dma_alignment</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_queue_tag">blk_queue_tag</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_tags">queue_tags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tag_busy_list">tag_busy_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_sorted">nr_sorted</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/in_flight">in_flight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">2</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Number of active block driver functions for which blk_drain_queue()</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * must wait. Must be incremented around functions that unlock the</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * queue_lock internally, e.g. scsi_request_fn().</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_fn_active">request_fn_active</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq_timeout">rq_timeout</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/timer_list">timer_list</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/timeout">timeout</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/work_struct">work_struct</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/timeout_work">timeout_work</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/timeout_list">timeout_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_list">icq_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_CGROUP">CONFIG_BLK_CGROUP</a></span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/DECLARE_BITMAP">DECLARE_BITMAP</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">blkcg_pols</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKCG_MAX_POLS">BLKCG_MAX_POLS</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_gq">blkcg_gq</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/root_blkg">root_blkg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_list">blkg_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue_limits">queue_limits</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/limits">limits</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * sg stuff</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sg_timeout">sg_timeout</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sg_reserved_size">sg_reserved_size</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/node">node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_DEV_IO_TRACE">CONFIG_BLK_DEV_IO_TRACE</a></span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_trace">blk_trace</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_trace">blk_trace</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * for flush operations</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_flush_queue">blk_flush_queue</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/fq">fq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/requeue_list">requeue_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/spinlock_t">spinlock_t</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/requeue_lock">requeue_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/delayed_work">delayed_work</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/requeue_work">requeue_work</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex">mutex</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sysfs_lock">sysfs_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bypass_depth">bypass_depth</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/atomic_t">atomic_t</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_freeze_depth">mq_freeze_depth</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#if <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/defined">defined</a>(<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_DEV_BSG">CONFIG_BLK_DEV_BSG</a>)</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bsg_job_fn">bsg_job_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bsg_job_fn">bsg_job_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bsg_job_size">bsg_job_size</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bsg_class_device">bsg_class_device</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bsg_dev">bsg_dev</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br /><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_DEV_THROTTLING">CONFIG_BLK_DEV_THROTTLING</a></span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* Throttle data */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/throtl_data">throtl_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/td">td</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rcu_head">rcu_head</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rcu_head">rcu_head</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/wait_queue_head_t">wait_queue_head_t</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_freeze_wq">mq_freeze_wq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/percpu_ref">percpu_ref</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/q_usage_counter">q_usage_counter</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/all_q_node">all_q_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_mq_tag_set">blk_mq_tag_set</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tag_set">tag_set</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tag_set_list">tag_set_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_set">bio_set</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_split">bio_split</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bool">bool</a></span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_sysfs_init_done">mq_sysfs_init_done</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="2762" y="1303" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">struct request_queue {...</text></switch></g><rect x="3670" y="1314" width="550" height="1740" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1321px; margin-left: 3672px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * Try to put the fields that are referenced together in the same cacheline.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * If you modify this structure, make sure to update blk_rq_init() and</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * especially blk_mq_rq_ctx_init() to take care of the added fields.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queuelist">queuelist</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">union</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/call_single_data">call_single_data</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/csd">csd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/u64">u64</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/fifo_time">fifo_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">q</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blk_mq_ctx">blk_mq_ctx</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mq_ctx">mq_ctx</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n">cpu</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cmd_type">cmd_type</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/u64">u64</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cmd_flags">cmd_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/atomic_flags">atomic_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* the following two fields are internal, NEVER access directly */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__data_len">__data_len</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* total data len */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sector_t">sector_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__sector">__sector</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>		<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* sector cursor */</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/biotail">biotail</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * The hash is used inside the scheduler, and killed once the</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * request reaches the dispatch list. The ipi_list is only used</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * to queue the request for softirq completion, which is long</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * after the request has been unhashed (and even removed from</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * the dispatch list).</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">union</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/hlist_node">hlist_node</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/hash">hash</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* merge hash */</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ipi_list">ipi_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * The rb_node is only used inside the io scheduler, requests</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * are pruned when moved to the dispatch queue. So let the</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * completion_data share space with the rb_node.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">union</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rb_node">rb_node</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rb_node">rb_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* sort/lookup */</span><br />		<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/completion_data">completion_data</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Three pointers are available for the IO schedulers, if they need</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * more they have to dynamically allocate it.  Flush requests are</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * never put on the IO scheduler. So let the flush fields share</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * space with the elevator data.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">union</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />			<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cq">io_cq</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq">icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span>			<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">priv</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">2</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv">elv</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />			<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/seq">seq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span>	<span style="box-sizing: inherit" class="n">list</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq_end_io_fn">rq_end_io_fn</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/saved_end_io">saved_end_io</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/flush">flush</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gendisk">gendisk</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq_disk">rq_disk</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/hd_struct">hd_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/part">part</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/start_time">start_time</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_CGROUP">CONFIG_BLK_CGROUP</a></span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_list">request_list</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rl">rl</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>		<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* rl this rq is alloced from */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/start_time_ns">start_time_ns</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_start_time_ns">io_start_time_ns</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>    <span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* when passed to hardware */</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* Number of scatter-gather DMA addr+len pairs after</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * physical address coalescing is performed.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_phys_segments">nr_phys_segments</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#if <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/defined">defined</a>(<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_DEV_INTEGRITY">CONFIG_BLK_DEV_INTEGRITY</a>)</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_integrity_segments">nr_integrity_segments</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioprio">ioprio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/special">special</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>		<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* opaque pointer available for LLD use */</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tag">tag</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/errors">errors</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * when request is used as a packet command carrier</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">char</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__cmd">__cmd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLK_MAX_CDB">BLK_MAX_CDB</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">char</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">cmd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cmd_len">cmd_len</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/extra_len">extra_len</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* length of alignment and padding */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sense_len">sense_len</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/resid_len">resid_len</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* residual count */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sense">sense</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">long</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/deadline">deadline</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/timeout_list">timeout_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/timeout">timeout</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/retries">retries</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * completion callback.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq_end_io_fn">rq_end_io_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/end_io">end_io</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/end_io_data">end_io_data</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* for bidi */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/next_rq">next_rq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="3672" y="1333" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/*...</text></switch></g><rect x="40" y="2454" width="560" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2461px; margin-left: 42px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_bio_merged">cfq_bio_merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">q</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">req</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />				<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg_stats_update_io_merged">cfqg_stats_update_io_merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/RQ_CFQG">RQ_CFQG</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">req</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">),</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_op">bio_op</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">),</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_opf">bi_opf</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="42" y="2473" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static void cfq_bio_merged(struct request_queue *q, struct request *req,...</text></switch></g><path d="M 78 2586 L 77.95 2738.61" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 77.95 2743.86 L 74.45 2736.86 L 77.95 2738.61 L 81.45 2736.86 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="40" y="1789" width="550" height="500" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1796px; margin-left: 42px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_type">elevator_type</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/iosched_cfq">iosched_cfq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n">ops</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_fn">elevator_merge_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> 		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_merge">cfq_merge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merged_fn">elevator_merged_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_merged_request">cfq_merged_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_req_fn">elevator_merge_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_merged_requests">cfq_merged_requests</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_bio_merge_fn">elevator_allow_bio_merge_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_allow_bio_merge">cfq_allow_bio_merge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_rq_merge_fn">elevator_allow_rq_merge_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_allow_rq_merge">cfq_allow_rq_merge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_bio_merged_fn">elevator_bio_merged_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_bio_merged">cfq_bio_merged</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_dispatch_fn">elevator_dispatch_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_dispatch_requests">cfq_dispatch_requests</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_add_req_fn">elevator_add_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_insert_request">cfq_insert_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_activate_req_fn">elevator_activate_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_activate_request">cfq_activate_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_deactivate_req_fn">elevator_deactivate_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_deactivate_request">cfq_deactivate_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_completed_req_fn">elevator_completed_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_completed_request">cfq_completed_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_former_req_fn">elevator_former_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv_rb_former_request">elv_rb_former_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_latter_req_fn">elevator_latter_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv_rb_latter_request">elv_rb_latter_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_icq_fn">elevator_init_icq_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_init_icq">cfq_init_icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_icq_fn">elevator_exit_icq_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_exit_icq">cfq_exit_icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_set_req_fn">elevator_set_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_set_request">cfq_set_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_put_req_fn">elevator_put_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_put_request">cfq_put_request</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_may_queue_fn">elevator_may_queue_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_may_queue">cfq_may_queue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_fn">elevator_init_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_init_queue">cfq_init_queue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_fn">elevator_exit_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_exit_queue">cfq_exit_queue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_registered_fn">elevator_registered_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_registered_queue">cfq_registered_queue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">},</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_size">icq_size</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">sizeof</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_io_cq">cfq_io_cq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">),</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_align">icq_align</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n">__alignof__</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_io_cq">cfq_io_cq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">),</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_attrs">elevator_attrs</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_attrs">cfq_attrs</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_name">elevator_name</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit ; color: rgb(222 , 127 , 0)" class="s">"cfq"</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_owner">elevator_owner</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/THIS_MODULE">THIS_MODULE</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span></pre></div></div></div></foreignObject><text x="42" y="1808" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct elevator_type iosched_cfq = {...</text></switch></g><path d="M 410 814 L 475 814 Q 485 814 485 804 L 485 614.6 Q 485 604.6 495 604.59 L 551.43 604.56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 556.68 604.56 L 549.68 608.06 L 551.43 604.56 L 549.68 601.06 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="564" width="410" height="500" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 408px; height: 1px; padding-top: 571px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__init">__init</a></span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_init">cfq_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_CFQ_GROUP_IOSCHED">CONFIG_CFQ_GROUP_IOSCHED</a></span><br />	<span style="box-sizing: inherit" class="n">ret</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_register">blkcg_policy_register</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_cfq">blkcg_policy_cfq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#else</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_idle">cfq_group_idle</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br /><br />	<span style="box-sizing: inherit" class="n">ret</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ENOMEM">ENOMEM</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pool">cfq_pool</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/KMEM_CACHE">KMEM_CACHE</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_queue">cfq_queue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pool">cfq_pool</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">goto</span> <span style="box-sizing: inherit" class="n">err_pol_unreg</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n">ret</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv_register">elv_register</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/iosched_cfq">iosched_cfq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">goto</span> <span style="box-sizing: inherit" class="n">err_free_pool</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl">err_free_pool</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kmem_cache_destroy">kmem_cache_destroy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pool">cfq_pool</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl">err_pol_unreg</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_CFQ_GROUP_IOSCHED">CONFIG_CFQ_GROUP_IOSCHED</a></span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_unregister">blkcg_policy_unregister</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_cfq">blkcg_policy_cfq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="2" y="583" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static int __init cfq_init(void)...</text></switch></g><path d="M 821.2 2175.08 L 820.11 2274 Q 820 2284 830 2284 L 880 2284 Q 890 2284 890 2294 L 890 2447.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 890 2452.88 L 886.5 2445.88 L 890 2447.63 L 893.5 2445.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 40 1074 L 40 1504 Q 40 1514 50 1514 L 150 1514 Q 160 1514 160 1524 L 160 1777.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 160 1782.88 L 156.5 1775.88 L 160 1777.63 L 163.5 1775.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="40" y="2904" width="550" height="480" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2911px; margin-left: 42px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/**</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * blkg_rwstat_add - add a value to a blkg_rwstat</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @rwstat: target blkg_rwstat</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @op: REQ_OP</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @op_flags: rq_flag_bits</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @val: value to add</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * Add @val to @rwstat.  The counters are chosen according to @rw.  The</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * caller is responsible for synchronizing calls to this function.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="kr">inline</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat_add">blkg_rwstat_add</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_rwstat">blkg_rwstat</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rwstat">rwstat</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />				   <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op">op</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op_flags">op_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/uint64_t">uint64_t</a></span> <span style="box-sizing: inherit" class="n">val</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/percpu_counter">percpu_counter</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op_is_write">op_is_write</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op">op</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">))</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rwstat">rwstat</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpu_cnt">cpu_cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKG_RWSTAT_WRITE">BLKG_RWSTAT_WRITE</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">else</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rwstat">rwstat</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpu_cnt">cpu_cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKG_RWSTAT_READ">BLKG_RWSTAT_READ</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__percpu_counter_add">__percpu_counter_add</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n">val</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKG_STAT_CPU_BATCH">BLKG_STAT_CPU_BATCH</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/op_flags">op_flags</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/REQ_SYNC">REQ_SYNC</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rwstat">rwstat</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpu_cnt">cpu_cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKG_RWSTAT_SYNC">BLKG_RWSTAT_SYNC</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">else</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rwstat">rwstat</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpu_cnt">cpu_cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKG_RWSTAT_ASYNC">BLKG_RWSTAT_ASYNC</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__percpu_counter_add">__percpu_counter_add</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cnt">cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n">val</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKG_STAT_CPU_BATCH">BLKG_STAT_CPU_BATCH</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="42" y="2923" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/**...</text></switch></g><path d="M 177.5 2884 L 177.5 2897.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 177.5 2902.88 L 174 2895.88 L 177.5 2897.63 L 181 2895.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="90" y="2604" width="550" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2611px; margin-left: 92px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#define <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/RQ_CFQG">RQ_CFQG</a>(<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq">rq</a>)		(struct <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a> *) ((<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/rq">rq</a>)-&gt;<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv">elv</a>.priv[1])</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="92" y="2623" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">#define RQ_CFQG(rq)		(struct cfq_group *) ((rq)-&gt;elv.priv[1])...</text></switch></g><path d="M 180 2290 L 180 2447.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 180 2452.88 L 176.5 2445.88 L 180 2447.63 L 183.5 2445.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 4223.85 2154.42 L 4270 2154.07 Q 4280 2154 4280 2144 L 4280 1604 Q 4280 1594 4290 1594 L 4313.63 1594" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 4318.88 1594 L 4311.88 1597.5 L 4313.63 1594 L 4311.88 1590.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="92" y="2644" width="430" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 428px; height: 1px; padding-top: 2651px; margin-left: 94px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#define <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_op">bio_op</a>(<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a>)	((<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a>)-&gt;<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_opf">bi_opf</a> &gt;&gt; <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BIO_OP_SHIFT">BIO_OP_SHIFT</a>)</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="94" y="2663" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">#define bio_op(bio)	((bio)-&gt;bi_opf &gt;&gt; BIO_OP_SHIFT)...</text></switch></g><rect x="3670" y="3074" width="550" height="1030" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 3081px; margin-left: 3672px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLOCK">CONFIG_BLOCK</a></span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * main unit of I/O for the block layer and lower layers (ie drivers and</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * stacking drivers)</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_next">bi_next</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* request queue link */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/block_device">block_device</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_bdev">bi_bdev</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_error">bi_error</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_opf">bi_opf</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>		<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* bottom bits req flags,</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">						 * top bits REQ_OP. Use</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">						 * accessors.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">						 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_flags">bi_flags</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* status, command, etc */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_ioprio">bi_ioprio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bvec_iter">bvec_iter</a></span>	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_iter">bi_iter</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* Number of segments in this BIO after</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * physical address coalescing is performed.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_phys_segments">bi_phys_segments</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * To keep track of the max segment size, we account for the</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * sizes of the first and last mergeable segments in this bio.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_seg_front_size">bi_seg_front_size</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_seg_back_size">bi_seg_back_size</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/atomic_t">atomic_t</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__bi_remaining">__bi_remaining</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_end_io_t">bio_end_io_t</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_end_io">bi_end_io</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span>			<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_private">bi_private</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_CGROUP">CONFIG_BLK_CGROUP</a></span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Optional ioc and css associated with this bio.  Put on bio</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * release.  Read comment on top of bio_associate_current().</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_context">io_context</a></span>	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_ioc">bi_ioc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_css">bi_css</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">union</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#if <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/defined">defined</a>(<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_BLK_DEV_INTEGRITY">CONFIG_BLK_DEV_INTEGRITY</a>)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_integrity_payload">bio_integrity_payload</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_integrity">bi_integrity</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span> <span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* data integrity */</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_vcnt">bi_vcnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* how many bio_vec's */</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Everything starting with bi_max_vecs will be preserved by bio_reset()</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/short">short</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_max_vecs">bi_max_vecs</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* max bvl_vecs we can hold */</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/atomic_t">atomic_t</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/__bi_cnt">__bi_cnt</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* pin count */</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_vec">bio_vec</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_io_vec">bi_io_vec</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* the actual vec list */</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_set">bio_set</a></span>		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_pool">bi_pool</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * We can inline a number of vecs at the end of the bio, to avoid</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * double allocations for a small number of bio_vecs. This member</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * MUST obviously be kept at the very end of the bio.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_vec">bio_vec</a></span>		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bi_inline_vecs">bi_inline_vecs</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="3672" y="3093" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">#ifdef CONFIG_BLOCK...</text></switch></g><rect x="710" y="3364" width="520" height="270" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 518px; height: 1px; padding-top: 3371px; margin-left: 712px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_merge">cfq_merge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">q</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">**</span><span style="box-sizing: inherit" class="n">req</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />		     <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_data">cfq_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqd">cfqd</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n">q</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator">elevator</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_data">elevator_data</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">__rq</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n">__rq</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_find_rq_fmerge">cfq_find_rq_fmerge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqd">cfqd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">__rq</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;&amp;</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv_bio_merge_ok">elv_bio_merge_ok</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">__rq</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">))</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">req</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n">__rq</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ELEVATOR_FRONT_MERGE">ELEVATOR_FRONT_MERGE</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ELEVATOR_NO_MERGE">ELEVATOR_NO_MERGE</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="712" y="3383" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static int cfq_merge(struct request_queue *q, struct request **req,...</text></switch></g><path d="M 590 1917 L 670 1917 Q 680 1917 680 1927 L 680 3464 Q 680 3474 690 3473.96 L 700.51 3473.92" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 705.76 3473.89 L 698.78 3477.42 L 700.51 3473.92 L 698.75 3470.42 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="710" y="3684" width="550" height="270" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 3691px; margin-left: 712px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_find_rq_fmerge">cfq_find_rq_fmerge</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_data">cfq_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqd">cfqd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tsk">tsk</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/current">current</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_io_cq">cfq_io_cq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cic">cic</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_queue">cfq_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqq">cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cic">cic</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cic_lookup">cfq_cic_lookup</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqd">cfqd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tsk">tsk</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_context">io_context</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cic">cic</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqq">cfqq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cic_to_cfqq">cic_to_cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cic">cic</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_bio_sync">cfq_bio_sync</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">));</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqq">cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv_rb_find">elv_rb_find</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqq">cfqq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/sort_list">sort_list</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio_end_sector">bio_end_sector</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">));</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="712" y="3703" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct request *...</text></switch></g><path d="M 846.76 3638.05 L 847.4 3677.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 847.48 3682.88 L 843.87 3675.94 L 847.4 3677.63 L 850.87 3675.83 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1320" y="3694" width="550" height="160" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 3701px; margin-left: 1322px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="kr">inline</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_io_cq">cfq_io_cq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cic_lookup">cfq_cic_lookup</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_data">cfq_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqd">cfqd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />					       <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_context">io_context</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_to_cic">icq_to_cic</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc_lookup_icq">ioc_lookup_icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqd">cfqd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/queue">queue</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">));</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1322" y="3713" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static inline struct cfq_io_cq *cfq_cic_lookup(struct cfq_data *cfqd,...</text></switch></g><rect x="1650" y="3864" width="550" height="110" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 3871px; margin-left: 1652px;"><div data-drawio-colors="color: rgb(0, 0, 0); border-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; border: 1px solid rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="kr">inline</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_io_cq">cfq_io_cq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_to_cic">icq_to_cic</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cq">io_cq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq">icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* cic-&gt;icq is the first member, %NULL will convert to %NULL */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/container_of">container_of</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq">icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_io_cq">cfq_io_cq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq">icq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1652" y="3883" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static inline struct cfq_io_cq *icq_to_cic(struct io_cq *icq)...</text></switch></g><rect x="1650" y="3994" width="550" height="190" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 4001px; margin-left: 1652px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/**</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * container_of - cast a member of a structure out to the containing structure</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @ptr:	the pointer to the member.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @type:	the type of the container struct this is embedded in.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @member:	the name of the member within the struct.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#define <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/container_of">container_of</a>(ptr, type, <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/member">member</a>) ({			\</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">	const <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/typeof">typeof</a>( ((type *)0)-&gt;<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/member">member</a> ) *__mptr = (ptr);	\</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">	(type *)( (char *)__mptr - <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/offsetof">offsetof</a>(type,<a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/member">member</a>) );})</span></pre></div></div></div></foreignObject><text x="1652" y="4013" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/**...</text></switch></g><path d="M 1457.5 3854 L 1457.92 3904 Q 1458 3914 1468 3914 L 1643.63 3914" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1648.88 3914 L 1641.88 3917.5 L 1643.63 3914 L 1641.88 3910.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1260 3764 L 1313.63 3765.6" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1318.88 3765.76 L 1311.78 3769.05 L 1313.63 3765.6 L 1311.99 3762.05 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2768" y="4294" width="550" height="350" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 4301px; margin-left: 2770px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * identifies an elevator type, such as AS or deadline</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_type">elevator_type</a></span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* managed by elevator core */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kmem_cache">kmem_cache</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_cache">icq_cache</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* fields provided by elevator implementation */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_ops">elevator_ops</a></span> <span style="box-sizing: inherit" class="n">ops</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/size_t">size_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_size">icq_size</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* see iocontext.h */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/size_t">size_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_align">icq_align</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* ditto */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elv_fs_entry">elv_fs_entry</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_attrs">elevator_attrs</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">char</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_name">elevator_name</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ELV_NAME_MAX">ELV_NAME_MAX</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/module">module</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_owner">elevator_owner</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* managed by elevator core */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">char</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/icq_cache_name">icq_cache_name</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ELV_NAME_MAX">ELV_NAME_MAX</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">+</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">5</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">];</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* elvname + "_io_cq" */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span> <span style="box-sizing: inherit" class="n">list</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span></pre></div></div></div></foreignObject><text x="2770" y="4313" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/*...</text></switch></g><rect x="3430" y="4294" width="550" height="500" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 4301px; margin-left: 3432px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_ops">elevator_ops</a></span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_fn">elevator_merge_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_fn">elevator_merge_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merged_fn">elevator_merged_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merged_fn">elevator_merged_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_req_fn">elevator_merge_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_req_fn">elevator_merge_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_bio_merge_fn">elevator_allow_bio_merge_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_bio_merge_fn">elevator_allow_bio_merge_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_rq_merge_fn">elevator_allow_rq_merge_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_rq_merge_fn">elevator_allow_rq_merge_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_bio_merged_fn">elevator_bio_merged_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_bio_merged_fn">elevator_bio_merged_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_dispatch_fn">elevator_dispatch_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_dispatch_fn">elevator_dispatch_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_add_req_fn">elevator_add_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_add_req_fn">elevator_add_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_activate_req_fn">elevator_activate_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_activate_req_fn">elevator_activate_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_deactivate_req_fn">elevator_deactivate_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_deactivate_req_fn">elevator_deactivate_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_completed_req_fn">elevator_completed_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_completed_req_fn">elevator_completed_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_request_list_fn">elevator_request_list_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_former_req_fn">elevator_former_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_request_list_fn">elevator_request_list_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_latter_req_fn">elevator_latter_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_icq_fn">elevator_init_icq_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_icq_fn">elevator_init_icq_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* see iocontext.h */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_icq_fn">elevator_exit_icq_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_icq_fn">elevator_exit_icq_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* ditto */</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_set_req_fn">elevator_set_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_set_req_fn">elevator_set_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_put_req_fn">elevator_put_req_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_put_req_fn">elevator_put_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_may_queue_fn">elevator_may_queue_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_may_queue_fn">elevator_may_queue_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_fn">elevator_init_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_fn">elevator_init_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_fn">elevator_exit_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_fn">elevator_exit_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_registered_fn">elevator_registered_fn</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_registered_fn">elevator_registered_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span></pre></div></div></div></foreignObject><text x="3432" y="4313" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">struct elevator_ops...</text></switch></g><rect x="4090" y="4274" width="760" height="530" fill="none" stroke="#000000" stroke-dasharray="3 3" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 758px; height: 1px; padding-top: 4281px; margin-left: 4092px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_fn">elevator_merge_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">**</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />				 <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merge_req_fn">elevator_merge_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_merged_fn">elevator_merged_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_bio_merge_fn">elevator_allow_bio_merge_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />					   <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_allow_rq_merge_fn">elevator_allow_rq_merge_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />					  <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_bio_merged_fn">elevator_bio_merged_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />						<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_dispatch_fn">elevator_dispatch_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_add_req_fn">elevator_add_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_request_list_fn">elevator_request_list_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_completed_req_fn">elevator_completed_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_may_queue_fn">elevator_may_queue_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_icq_fn">elevator_init_icq_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cq">io_cq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_icq_fn">elevator_exit_icq_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cq">io_cq</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_set_req_fn">elevator_set_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />				   <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bio">bio</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_put_req_fn">elevator_put_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_activate_req_fn">elevator_activate_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_deactivate_req_fn">elevator_deactivate_req_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request">request</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_init_fn">elevator_init_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />				<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_type">elevator_type</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">e</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_exit_fn">elevator_exit_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_queue">elevator_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/elevator_registered_fn">elevator_registered_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/request_queue">request_queue</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span></pre></div></div></div></foreignObject><text x="4092" y="4293" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">typedef int (elevator_merge_fn) (struct request_queue *, struct request **,...</text></switch></g><path d="M 3318 4469 L 3350 4469 Q 3360 4469 3360 4459 L 3360 4338 Q 3360 4328 3370 4328.07 L 3424.73 4328.46" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3429.98 4328.49 L 3422.96 4331.94 L 3424.73 4328.46 L 3423.01 4324.94 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="3660" y="4304" width="250" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 248px; height: 1px; padding-top: 4314px; margin-left: 3661px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">其实函数作用比较类似主要看函数原型的参数</div></div></div></foreignObject><text x="3785" y="4318" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">其实函数作用比较类似主要看函数原型的参数</text></switch></g><rect x="870" y="1644" width="550" height="180" fill="none" stroke="#000000" stroke-dasharray="3 3" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1651px; margin-left: 872px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_alloc_cpd_fn">blkcg_pol_alloc_cpd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_init_cpd_fn">blkcg_pol_init_cpd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_free_cpd_fn">blkcg_pol_free_cpd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_bind_cpd_fn">blkcg_pol_bind_cpd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_alloc_pd_fn">blkcg_pol_alloc_pd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/node">node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_init_pd_fn">blkcg_pol_init_pd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_online_pd_fn">blkcg_pol_online_pd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_offline_pd_fn">blkcg_pol_offline_pd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_free_pd_fn">blkcg_pol_free_pd_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">typedef</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_pol_reset_pd_stats_fn">blkcg_pol_reset_pd_stats_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span></pre></div></div></div></foreignObject><text x="872" y="1663" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">typedef struct blkcg_policy_data *(blkcg_pol_alloc_cpd_fn)(gfp_t gfp);...</text></switch></g><rect x="1280" y="1854" width="450" height="150" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1861px; margin-left: 1282px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cpd_alloc">cfq_cpd_alloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp_t">gfp_t</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/gfp">gfp</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_data">cfq_group_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n">cgd</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kzalloc">kzalloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">sizeof</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">),</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/GFP_KERNEL">GFP_KERNEL</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1282" y="1873" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct blkcg_policy_data *cfq_cpd_alloc(gfp_t gfp)...</text></switch></g><rect x="1280" y="2114" width="530" height="200" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 528px; height: 1px; padding-top: 2121px; margin-left: 1282px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_cpd_init">cfq_cpd_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_data">cfq_group_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">cgd</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_to_cfqgd">cpd_to_cfqgd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_on_dfl">cgroup_subsys_on_dfl</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cgrp_subsys">io_cgrp_subsys</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">?</span><br />			      <span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/CGROUP_WEIGHT_DFL">CGROUP_WEIGHT_DFL</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/CFQ_WEIGHT_LEGACY_DFL">CFQ_WEIGHT_LEGACY_DFL</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_to_blkcg">cpd_to_blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">==</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_root">blkcg_root</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*=</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">2</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/leaf_weight">leaf_weight</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1282" y="2133" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static void cfq_cpd_init(struct blkcg_policy_data *cpd)...</text></switch></g><path d="M 1163.96 2023.07 L 1230 2023.01 Q 1240 2023 1240 2033 L 1240 2224 Q 1240 2234 1250 2234 L 1273.63 2234" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1278.88 2234 L 1271.88 2237.5 L 1273.63 2234 L 1271.88 2230.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1585 2604 L 1585 2629 Q 1585 2639 1595 2639 L 1695 2639 Q 1705 2639 1705 2649 L 1705 2667.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1705 2672.88 L 1701.5 2665.88 L 1705 2667.63 L 1708.5 2665.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1370 2604 L 1370 2688 Q 1370 2698 1360 2698 L 1310 2698 Q 1300 2698 1300 2708 L 1300 2826 Q 1300 2836 1310 2836 L 1315 2836 Q 1320 2836 1320 2834.32 L 1320 2832.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1320 2837.88 L 1316.5 2830.88 L 1320 2832.63 L 1323.5 2830.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1320" y="2464" width="530" height="140" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 528px; height: 1px; padding-top: 2471px; margin-left: 1322px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_pd_init">cfq_pd_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_to_cfqg">pd_to_cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_data">cfq_group_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">cgd</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_to_cfqgd">blkcg_to_cfqgd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg">blkg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/weight">weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfqg">cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/leaf_weight">leaf_weight</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n">cgd</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/leaf_weight">leaf_weight</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1322" y="2483" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static void cfq_pd_init(struct blkg_policy_data *pd)...</text></switch></g><path d="M 961.12 2175.89 L 960.05 2384 Q 960 2394 970 2394 L 1430 2394 Q 1440 2394 1440 2404 L 1440 2455.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1440 2460.88 L 1436.5 2453.88 L 1440 2455.63 L 1443.5 2453.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1160 1971.5 L 1190 1971.88 Q 1200 1972 1200 1962 L 1200 1902 Q 1200 1892 1210 1891.94 L 1273.63 1891.54" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1278.88 1891.51 L 1271.9 1895.05 L 1273.63 1891.54 L 1271.86 1888.05 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1430" y="2674" width="550" height="100" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2681px; margin-left: 1432px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="kr">inline</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd_to_cfqg">pd_to_cfqg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_policy_data">blkg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">?</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/container_of">container_of</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group">cfq_group</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pd">pd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">:</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1432" y="2693" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static inline struct cfq_group *pd_to_cfqg(struct blkg_policy_data *pd)...</text></switch></g><path d="M 1400 2884 L 1400 2909 Q 1400 2919 1410 2919 L 1585 2919 Q 1595 2919 1595 2929 L 1595 2947.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1595 2952.88 L 1591.5 2945.88 L 1595 2947.63 L 1598.5 2945.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1850 2839 L 1875 2839 Q 1885 2839 1885 2849 L 1885 2994 Q 1885 3004 1895 3004 L 1913.63 3004" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1918.88 3004 L 1911.88 3007.5 L 1913.63 3004 L 1911.88 3000.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1320" y="2794" width="530" height="90" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 528px; height: 1px; padding-top: 2801px; margin-left: 1322px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_data">cfq_group_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_to_cfqgd">blkcg_to_cfqgd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_to_cfqgd">cpd_to_cfqgd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_to_cpd">blkcg_to_cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_cfq">blkcg_policy_cfq</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">));</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1322" y="2813" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct cfq_group_data *blkcg_to_cfqgd(struct blkcg *blkcg)...</text></switch></g><rect x="1320" y="2954" width="550" height="110" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2961px; margin-left: 1322px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_data">cfq_group_data</a></span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_to_cfqgd">cpd_to_cfqgd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">?</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/container_of">container_of</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfq_group_data">cfq_group_data</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">:</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1322" y="2973" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct cfq_group_data...</text></switch></g><rect x="1920" y="2954" width="550" height="100" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2961px; margin-left: 1922px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="kr">inline</span> <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_to_cpd">blkcg_to_cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />						     <span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">?</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">:</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1922" y="2973" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static inline struct blkcg_policy_data *blkcg_to_cpd(struct blkcg *blkcg,...</text></switch></g><path d="M 835 1604 L 835 1744 Q 835 1754 825 1754 L 765.6 1754 Q 755.6 1754 755.6 1764 L 755.64 1898.98" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 755.64 1904.23 L 752.14 1897.23 L 755.64 1898.98 L 759.14 1897.23 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1110 1254 L 1150 1254 Q 1160 1254 1160 1244 L 1160 564 Q 1160 554 1170 554 L 1200 554 Q 1210 554 1210 551.05 L 1210 549.57 Q 1210 548.1 1210.71 548.1 L 1211.42 548.1" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1206.17 548.1 L 1213.17 544.6 L 1211.42 548.1 L 1213.17 551.6 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="560" y="564" width="550" height="1040" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 571px; margin-left: 562px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/**</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * blkcg_policy_register - register a blkcg policy</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * @pol: blkcg policy to register</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * Register @pol with blkcg core.  Might sleep and @pol may be modified on</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * successful registration.  Returns 0 on success and -errno on failure.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_register">blkcg_policy_register</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_lock">mutex_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_register_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_lock">mutex_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* find an empty slot */</span><br />	<span style="box-sizing: inherit" class="n">ret</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ENOSPC">ENOSPC</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">for</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">i</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span> <span style="box-sizing: inherit" class="n">i</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&lt;</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKCG_MAX_POLS">BLKCG_MAX_POLS</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span> <span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">++</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">])</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/break">break</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">i</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&gt;=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKCG_MAX_POLS">BLKCG_MAX_POLS</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">goto</span> <span style="box-sizing: inherit" class="n">err_unlock</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* register @pol */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n">i</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* allocate and install cpd's */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_alloc_fn">cpd_alloc_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_for_each_entry">list_for_each_entry</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">all_blkcgs</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/all_blkcgs_node">all_blkcgs_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />			<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_alloc_fn">cpd_alloc_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/GFP_KERNEL">GFP_KERNEL</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />			<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">!</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />				<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">goto</span> <span style="box-sizing: inherit" class="n">err_free_cpds</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_init_fn">cpd_init_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* everything is in place, add intf files for the new policy */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dfl_cftypes">dfl_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/WARN_ON">WARN_ON</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_add_dfl_cftypes">cgroup_add_dfl_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cgrp_subsys">io_cgrp_subsys</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />					       <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dfl_cftypes">dfl_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">));</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_cftypes">legacy_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/WARN_ON">WARN_ON</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_add_legacy_cftypes">cgroup_add_legacy_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cgrp_subsys">io_cgrp_subsys</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />						  <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_cftypes">legacy_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">));</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_register_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br /><span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl">err_free_cpds</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_alloc_fn">cpd_alloc_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_for_each_entry">list_for_each_entry</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">all_blkcgs</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/all_blkcgs_node">all_blkcgs_node</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />			<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">])</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />				<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_free_fn">cpd_free_fn</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]);</span><br />				<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />			<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br />		<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">[</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">]</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 112 , 32)" class="nb">NULL</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl">err_unlock</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n">blkcg_pol_register_mutex</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br /><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/EXPORT_SYMBOL_GPL">EXPORT_SYMBOL_GPL</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_register">blkcg_policy_register</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="562" y="583" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/**...</text></switch></g><path d="M 1760 669 L 1790 669 Q 1800 669 1800 659 L 1800 345.2 Q 1800 335.2 1810 335.2 L 1830.88 335.2" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1836.13 335.2 L 1829.13 338.7 L 1830.88 335.2 L 1829.13 331.7 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1485 824 L 1485 897.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1485 902.88 L 1481.5 895.88 L 1485 897.63 L 1488.5 895.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1210 669 L 1200 669 Q 1190 669 1190 679 L 1190 1554 Q 1190 1564 1200 1564 L 1520 1564 Q 1530 1564 1530 1574 L 1530 1789 Q 1530 1799 1540 1799 L 1833.63 1799" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1838.88 1799 L 1831.88 1802.5 L 1833.63 1799 L 1831.88 1795.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1210" y="514" width="550" height="310" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 521px; margin-left: 1212px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys">cgroup_subsys</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cgrp_subsys">io_cgrp_subsys</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_alloc">css_alloc</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_css_alloc">blkcg_css_alloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_offline">css_offline</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_css_offline">blkcg_css_offline</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_free">css_free</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_css_free">blkcg_css_free</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/can_attach">can_attach</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_can_attach">blkcg_can_attach</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bind">bind</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_bind">blkcg_bind</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dfl_cftypes">dfl_cftypes</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_files">blkcg_files</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_cftypes">legacy_cftypes</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_legacy_files">blkcg_legacy_files</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_name">legacy_name</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(222 , 127 , 0)" class="s">"blkio"</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_MEMCG">CONFIG_MEMCG</a></span><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * This ensures that, if available, memcg is automatically enabled</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * together on the default hierarchy so that the owner cgroup can</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * be retrieved from writeback pages.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">.</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/depends_on">depends_on</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&lt;&lt;</span> <span style="box-sizing: inherit" class="n">memory_cgrp_id</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span><br /><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#endif</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/EXPORT_SYMBOL_GPL">EXPORT_SYMBOL_GPL</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_cgrp_subsys">io_cgrp_subsys</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1212" y="533" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">struct cgroup_subsys io_cgrp_subsys = {...</text></switch></g><rect x="2760" y="34" width="680" height="1216" fill="none" stroke="#000000" stroke-dasharray="1 1" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 678px; height: 1px; padding-top: 41px; margin-left: 2762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys">cgroup_subsys</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_alloc">css_alloc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">parent_css</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_online">css_online</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css">css</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_offline">css_offline</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css">css</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_released">css_released</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css">css</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_free">css_free</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css">css</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_reset">css_reset</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css">css</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/can_attach">can_attach</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_taskset">cgroup_taskset</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tset">tset</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cancel_attach">cancel_attach</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_taskset">cgroup_taskset</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tset">tset</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/attach">attach</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_taskset">cgroup_taskset</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tset">tset</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/post_attach">post_attach</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/can_fork">can_fork</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cancel_fork">cancel_fork</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/fork">fork</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/exit">exit</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/free">free</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">void</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bind">bind</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">root_css</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br /><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bool">bool</a></span> <span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/early_init">early_init</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * If %true, the controller, on the default hierarchy, doesn't show</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * up in "cgroup.controllers" or "cgroup.subtree_control", is</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * implicitly enabled on all cgroups on the default hierarchy, and</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * bypasses the "no internal process" constraint.  This is for</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * utility type controllers which is transparent to userland.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * An implicit controller can be stolen from the default hierarchy</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * anytime and thus must be okay with offline csses from previous</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * hierarchies coexisting with csses for the current one.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bool">bool</a></span> <span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/implicit_on_dfl">implicit_on_dfl</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * If %false, this subsystem is properly hierarchical -</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * configuration, resource accounting and restriction on a parent</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * cgroup cover those of its children.  If %true, hierarchy support</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * is broken in some ways - some subsystems ignore hierarchy</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * completely while others are only implemented half-way.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 *</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * It's now disallowed to create nested cgroups if the subsystem is</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * broken and cgroup core will emit a warning message on such</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * cases.  Eventually, all subsystems will be made properly</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * hierarchical and this will go away.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bool">bool</a></span> <span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/broken_hierarchy">broken_hierarchy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/bool">bool</a></span> <span style="box-sizing: inherit ; color: rgb(153 , 119 , 0)" class="nl"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/warned_broken_hierarchy">warned_broken_hierarchy</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">:</span><span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* the following two fields are initialized automtically during boot */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n">id</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">const</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">char</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">name</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* optional, initialized automatically during boot if not set */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">const</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">char</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_name">legacy_name</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* link to parent, protected by cgroup_lock() */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_root">cgroup_root</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">root</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* idr for css-&gt;id */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/idr">idr</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css_idr">css_idr</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * List of cftypes.  Each entry is the first entry of an array</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * terminated by zero length name.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_head">list_head</a></span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cfts">cfts</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * Base cftypes which are automatically registered.  The two can</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * point to the same array.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cftype">cftype</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/dfl_cftypes">dfl_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* for the default hierarchy */</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cftype">cftype</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/legacy_cftypes">legacy_cftypes</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span>	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* for the legacy hierarchies */</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * A subsystem may depend on other subsystems.  When such subsystem</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * is enabled on a cgroup, the depended-upon subsystems are enabled</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * together if available.  Subsystems enabled due to dependency are</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * not visible to userland until explicitly enabled.  The following</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 * specifies the mask of subsystems that this one depends on.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">	 */</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">unsigned</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/depends_on">depends_on</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">};</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="2762" y="53" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">struct cgroup_subsys {...</text></switch></g><rect x="2760" y="4" width="200" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 14px; margin-left: 2761px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b><font style="font-size: 24px">关键数据结构</font></b></div></div></div></foreignObject><text x="2860" y="18" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">关键数据结构</text></switch></g><path d="M 2390 904 L 2510 904 Q 2520 904 2520 914 L 2520 2204 Q 2520 2214 2510 2214 L 1816.37 2214" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1811.12 2214 L 1818.12 2210.5 L 1816.37 2214 L 1818.12 2217.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2390 904 L 2440 904 Q 2450 904 2450 914 L 2450 2074 Q 2450 2084 2440 2084 L 1516 2084 Q 1506 2084 1505.88 2074 L 1505.08 2010.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1505.01 2005.12 L 1508.6 2012.07 L 1505.08 2010.37 L 1501.6 2012.16 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1840" y="304" width="550" height="1200" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 311px; margin-left: 1842px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit ; font-family: &quot;ubuntu mono&quot; , monospace ; font-size: 0.9em ; line-height: 1.2 ; padding: 1em 0px 4em 1em ; margin: 0px ; min-height: 100% ; word-spacing: 0px ; word-break: normal ; overflow-wrap: normal ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-indent: 0px ; text-transform: none"><span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">static</span> <span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">struct</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><br /><span style="color: rgb(0 , 102 , 187) ; box-sizing: inherit" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_css_alloc">blkcg_css_alloc</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">struct</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">parent_css</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span><br /><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">{</span><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">struct</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">struct</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">ret</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />	<span style="color: rgb(51 , 51 , 153) ; box-sizing: inherit" class="kt">int</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br /><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_lock">mutex_lock</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br /><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">if</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">!</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">parent_css</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">{</span><br />		<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_root">blkcg_root</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />	<span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">}</span> <span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">else</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">{</span><br />		<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kzalloc">kzalloc</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">sizeof</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">),</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/GFP_KERNEL">GFP_KERNEL</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />		<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">if</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">!</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">{</span><br />			<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">ret</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ERR_PTR">ERR_PTR</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ENOMEM">ENOMEM</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />			<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">goto</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">free_blkcg</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />		<span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">}</span><br />	<span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">}</span><br /><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">for</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 221) ; box-sizing: inherit" class="mi">0</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&lt;</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/BLKCG_MAX_POLS">BLKCG_MAX_POLS</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">++</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">{</span><br />		<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">struct</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">[</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">];</span><br />		<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">struct</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy_data">blkcg_policy_data</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">*</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br /><br />		<span style="color: slategray ; box-sizing: inherit ; font-style: italic" class="cm">/*</span><br /><span style="color: slategray ; box-sizing: inherit ; font-style: italic" class="cm">		 * If the policy hasn't been attached yet, wait for it</span><br /><span style="color: slategray ; box-sizing: inherit ; font-style: italic" class="cm">		 * to be attached before doing anything else. Otherwise,</span><br /><span style="color: slategray ; box-sizing: inherit ; font-style: italic" class="cm">		 * check if the policy requires any specific per-cgroup</span><br /><span style="color: slategray ; box-sizing: inherit ; font-style: italic" class="cm">		 * data: if it does, allocate and initialize it.</span><br /><span style="color: slategray ; box-sizing: inherit ; font-style: italic" class="cm">		 */</span><br />		<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">if</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">!</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">||</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">!</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_alloc_fn">cpd_alloc_fn</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span><br />			<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/continue">continue</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br /><br />		<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_alloc_fn">cpd_alloc_fn</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/GFP_KERNEL">GFP_KERNEL</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />		<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">if</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">!</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">{</span><br />			<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">ret</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ERR_PTR">ERR_PTR</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ENOMEM">ENOMEM</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />			<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">goto</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">free_pd_blkcg</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />		<span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">}</span><br />		<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">[</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">]</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />		<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br />		<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/plid">plid</a></span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">=</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br /><font color="#ff3333">		<span style="box-sizing: inherit" class="k">if</span> <span style="box-sizing: inherit" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_init_fn">cpd_init_fn</a></span><span style="box-sizing: inherit" class="p">)</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/pol">pol</a></span><span style="box-sizing: inherit" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_init_fn">cpd_init_fn</a></span><span style="box-sizing: inherit" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="box-sizing: inherit" class="p">);</span></font><br />	<span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">}</span><br /><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/spin_lock_init">spin_lock_init</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">lock</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/INIT_RADIX_TREE">INIT_RADIX_TREE</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_tree">blkg_tree</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">,</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/GFP_NOWAIT">GFP_NOWAIT</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/INIT_HLIST_HEAD">INIT_HLIST_HEAD</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkg_list">blkg_list</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br /><span style="color: rgb(85 , 119 , 153) ; box-sizing: inherit" class="cp">#ifdef <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/K/ident/CONFIG_CGROUP_WRITEBACK">CONFIG_CGROUP_WRITEBACK</a></span><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/INIT_LIST_HEAD">INIT_LIST_HEAD</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgwb_list">cgwb_list</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br /><span style="color: rgb(85 , 119 , 153) ; box-sizing: inherit" class="cp">#endif</span><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/list_add_tail">list_add_tail</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/all_blkcgs_node">all_blkcgs_node</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">,</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">all_blkcgs</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br /><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">return</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/css">css</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br /><br /><span style="color: rgb(153 , 119 , 0) ; box-sizing: inherit" class="nl">free_pd_blkcg</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">:</span><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">for</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">--</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&gt;=</span> <span style="color: rgb(0 , 0 , 221) ; box-sizing: inherit" class="mi">0</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">--</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">)</span><br />		<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">if</span> <span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">[</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">])</span><br />			<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_policy">blkcg_policy</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">[</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">]</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd_free_fn">cpd_free_fn</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">-&gt;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cpd">cpd</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">[</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">i</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">]);</span><br /><span style="color: rgb(153 , 119 , 0) ; box-sizing: inherit" class="nl">free_blkcg</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">:</span><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/kfree">kfree</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg">blkcg</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />	<span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/mutex_unlock">mutex_unlock</a></span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">(</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="o">&amp;</span><span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">blkcg_pol_mutex</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">);</span><br />	<span style="color: rgb(0 , 136 , 0) ; box-sizing: inherit" class="k">return</span> <span style="color: rgb(0 , 0 , 0) ; box-sizing: inherit" class="n">ret</span><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">;</span><br /><span style="color: rgb(102 , 102 , 102) ; box-sizing: inherit" class="p">}</span><br /></pre></div></div></div></foreignObject><text x="1842" y="323" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static struct cgroup_subsys_state *...</text></switch></g><rect x="1840" y="1554" width="550" height="490" fill="none" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1561px; margin-left: 1842px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/*</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * We cannot support shared io contexts, as we have no mean to support</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * two tasks with the same ioc in two different groups without major rework</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * of the main cic data structures.  For now we allow a task to change</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> * its cgroup only if it's the only owner of its ioc.</span><br /><span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm"> */</span><br /><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">static</span> <span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit ; color: rgb(0 , 102 , 187)" class="nf"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/blkcg_can_attach">blkcg_can_attach</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_taskset">cgroup_taskset</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tset">tset</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_struct">task_struct</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_subsys_state">cgroup_subsys_state</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n">dst_css</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">struct</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_context">io_context</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">*</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(51 , 51 , 153)" class="kt">int</span> <span style="box-sizing: inherit" class="n">ret</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">0</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><br />	<span style="box-sizing: inherit ; color: slategray ; font-style: italic" class="cm">/* task_lock() is needed to avoid races with exit_io_context() */</span><br />	<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/cgroup_taskset_for_each">cgroup_taskset_for_each</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n">dst_css</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">,</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/tset">tset</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">{</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_lock">task_lock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/io_context">io_context</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;&amp;</span> <span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/atomic_read">atomic_read</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&amp;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/ioc">ioc</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-&gt;</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/nr_tasks">nr_tasks</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">&gt;</span> <span style="box-sizing: inherit ; color: rgb(0 , 0 , 221)" class="mi">1</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />			<span style="box-sizing: inherit" class="n">ret</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">=</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="o">-</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/EINVAL">EINVAL</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />		<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task_unlock">task_unlock</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/task">task</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">);</span><br />		<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">if</span> <span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">(</span><span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">)</span><br />			<span style="box-sizing: inherit" class="n"><a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/break">break</a></span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br />	<span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span><br />	<span style="box-sizing: inherit ; color: rgb(0 , 136 , 0)" class="k">return</span> <span style="box-sizing: inherit" class="n">ret</span><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">;</span><br /><span style="box-sizing: inherit ; color: rgb(102 , 102 , 102)" class="p">}</span></pre></div></div></div></foreignObject><text x="1842" y="1573" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/*...</text></switch></g><rect x="1850" y="1224" width="530" height="280" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 528px; height: 1px; padding-top: 1231px; margin-left: 1852px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;">Each subsystem may export the following methods. The only mandatory<br />methods are css_alloc/free. Any others that are null are presumed to<br />be successful no-ops.<br /><br />struct cgroup_subsys_state *css_alloc(struct cgroup *cgrp)<br />(cgroup_mutex held by caller)<br /><br />Called to allocate a subsystem state object for a cgroup. The<br />subsystem should allocate its subsystem state object for the passed<br />cgroup, returning a pointer to the new object on success or a<br />ERR_PTR() value. On success, the subsystem pointer should point to<br />a structure of type cgroup_subsys_state (typically embedded in a<br />larger subsystem-specific object), which will be initialized by the<br />cgroup system. Note that this will be called at initialization to<br />create the root subsystem state for this subsystem; this case can be<br />identified by the passed cgroup object having a NULL parent (since<br />it's the root of the hierarchy) and may be an appropriate place for<br />initialization code.<br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1852" y="1243" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Each subsystem may export the following methods. The only mandatory...</text></switch></g><rect x="1860" y="1924" width="550" height="110" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 1931px; margin-left: 1862px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;">void attach(struct cgroup *cgrp, struct cgroup_taskset *tset)<br />(cgroup_mutex held by caller)<br /><br />Called after the task has been attached to the cgroup, to allow any<br />post-attachment activity that requires memory allocations or blocking.<br />The parameters are identical to can_attach().<br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="1862" y="1943" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void attach(struct cgroup *cgrp, struct cgroup_taskset *tset)...</text></switch></g><rect x="530" y="404" width="270" height="50" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 268px; height: 1px; padding-top: 411px; margin-left: 532px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="box-sizing: inherit; font-family: &quot;ubuntu mono&quot;, monospace; font-size: 0.9em; line-height: 1.2; padding: 1em 0px 4em 1em; color: rgb(0, 0, 0); margin: 0px; min-height: 100%; word-spacing: 0px; word-break: normal; overflow-wrap: normal; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none;"><span style="box-sizing: inherit ; color: rgb(85 , 119 , 153)" class="cp">#define <a style="box-sizing: inherit ; background: linear-gradient(rgba(0 , 0 , 0 , 0) 10% , rgb(244 , 246 , 255) 10% , rgb(244 , 246 , 255) 90% , rgba(0 , 0 , 0 , 0) 90%) ; color: inherit ; text-decoration: none ; font-weight: 700 ; border-radius: 0.2em" href="https://elixir.bootlin.com/linux/v4.9/C/ident/SCSI_DISK0_MAJOR">SCSI_DISK0_MAJOR</a>	8</span><br /></pre><br class="Apple-interchange-newline" /></div></div></div></foreignObject><text x="532" y="423" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">#define SCSI_DISK0_MAJOR	8...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>